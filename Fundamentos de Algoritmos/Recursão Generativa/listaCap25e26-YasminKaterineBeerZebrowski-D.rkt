#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 263 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 15
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 26 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 9 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 24 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 48 96 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 248 242
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 174 129 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 253 151 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 217 239
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 38 114 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 117 113 94 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 230 219 116
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 226 46 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 165 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 107 142 35
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 107 142 35
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 65 105 225
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 70 130 180
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 47 79 79 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 70 130 180
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 65 105 225
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 160 32 240
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 250 128 114
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 160 32 240
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 184 134 11
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 128 128 0
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 128 128 0
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 100 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 165 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 165 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 1 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 119 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 204 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 179 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 204 221 170
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 178 178 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 157 157 250
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 140 212 140
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 28 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 2353 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 99
(6
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e listaCap25e26-YasminKaterineBeerZ"
) 0 0 4 3 271
(7
 #"ebrowski-D) (read-case-sensitive #t) (teachpacks ((lib \"draw.rkt\" "
 #"\"teachpack\" \"htdp\") (lib \"image.rkt\" \"teachpack\" \"2htdp\"))"
 #") (htdp-settings #(#t constructor repeating-decimal #f #t none #f (("
 #"lib \"draw.rkt\" \"teachpack\" \"htdp\") (lib \"image.rkt\" \"teachp"
 #"ack\" \"2htdp\")) #t)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 29 #";; Lista Recurs\303\243o Generativa"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Nome: Yasmin Katerine Beer Zebrowski"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Turma D"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(8
 #";; ================================================================="
 #"========= "
) 0 0 24 29 1 #"\n"
0 0 17 3 15 #";; TIPO FIGURA:"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; ==========="
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"figura"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 6 #"altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Um elemento do conjunto Figura \303\251"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;     (make-figura x y a c), onde"
0 0 24 29 1 #"\n"
0 0 17 3 54
#";;   x: N\303\272mero, \303\251 a coordenada x do centro da figura"
0 0 24 29 1 #"\n"
0 0 17 3 54
#";;   y: N\303\272mero, \303\251 a coordenada y do centro da figura"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;   a : N\303\272mero, \303\251 a altura da figura"
0 0 24 29 1 #"\n"
0 0 17 3 92
(9
 #";;   c : N\303\272mero, n\303\272mero que representa a cor da figura"
 #", de acordo com a fun\303\247\303\243o gera-cor "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; FUN\303\207\303\203O GERA-COR:"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; gera-cor : N\303\272mero -> String"
0 0 24 29 1 #"\n"
0 0 17 3 96
(10
 #";; Dado um n\303\272mero positivo, devolve uma de 5 cores: \"red\", "
 #"\"blue\", \"green\", \"yellow\" ou \"cyan\"."
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;      (gera-cor 3) = \"yellow\""
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;      (gera-cor 55) = \"red\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"gera-cor"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #"]  "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 17 3 101
(11
 #";; Obs.: A fun\303\247\303\243o remanind"
 #"er devolve o resto da divis\303\243o inteira do primeiro pelo segund"
 #"o argumento"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; FUN\303\207\303\203O DESENHA-TRIANGULO:"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; desenha-triangulo : N\303\272mero String ->  Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 67
(12
 #";; Obj.: Dados um tamanho de lado e uma cor, desenha um tri\303\242n"
 #"gulo."
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;     (desenha-triangulo 20 \"red\") = "
0 6           4 17 279
(13
 #"(#(struct:translate -0.0 17.320508075688775 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(s"
 #"truct:pulled-point 0 0 10.000000000000004 -17.320508075688775 0 0)) "
 #"outline \"red\")) #(struct:bb 20.0 17.320508075688775 17.32050807568"
 #"8775) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";;     (desenha-triangulo 50 \"darkgreen\") = "
0 6           4 17 280
(14
 #"(#(struct:translate -0.0 43.30127018922194 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 25.00000000000001 -43.30127018922194 0 0)) out"
 #"line \"darkgreen\")) #(struct:bb 50.0 43.30127018922194 43.301270189"
 #"22194) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"desenha-triangulo"
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 17 #"desenha-triangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 17 #"desenha-triangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(15
 #";; ================================================================="
 #"========="
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #";; 1: Fun\303\247\303\243o sierpinski"
0 0 24 29 1 #"\n"
0 0 17 3 77 15 0 0 24 29 1 #"\n"
0 0 17 3 39 #";; sierpinski: N\303\272mero String -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 78
(16
 #";; Obj: Dados o tamanho do lado e uma cor, desenha um tri\303\242ngu"
 #"lo de Sierpinski"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(17
 #";; desta cor cujo lado do tri\303\242ngulo externo \303\251 o lado p"
 #"assado como argumento. "
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"("
0 0 17 3 10 #"sierpinski"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 10 #"\"cyan\") = "
0 6           4 17 275
(18
 #"(#(struct:translate -0.0 8.660254037844387 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(st"
 #"ruct:pulled-point 0 0 5.000000000000002 -8.660254037844387 0 0)) out"
 #"line \"cyan\")) #(struct:bb 10.0 8.660254037844387 8.660254037844387"
 #") #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"("
0 0 17 3 10 #"sierpinski"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 9 #"\"red\") = "
0 6           4 17 773
(19
 #"(#(struct:overlay #(struct:translate 20.0 0 #2=#(struct:overlay #(st"
 #"ruct:translate 10.0 0 #1=#(struct:overlay #(struct:translate 5.0 0 #"
 #"0=#(struct:translate -0.0 8.660254037844387 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(s"
 #"truct:pulled-point 0 0 5.000000000000002 -8.660254037844387 0 0)) ou"
 #"tline \"red\"))) #(struct:translate 0 8.660254037844387 #(struct:ove"
 #"rlay #(struct:translate 0 0 #0#) #(struct:translate 10.0 0.0 #0#))))"
 #") #(struct:translate 0 17.320508075688775 #(struct:overlay #(struct:"
 #"translate 0 0 #1#) #(struct:translate 20.0 0.0 #1#))))) #(struct:tra"
 #"nslate 0 34.64101615137755 #(struct:overlay #(struct:translate 0 0 #"
 #"2#) #(struct:translate 40.0 0.0 #2#)))) #(struct:bb 80.0 69.28203230"
 #"27551 69.2820323027551) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"("
0 0 17 3 10 #"sierpinski"
0 0 17 3 1 #" "
0 0 17 3 3 #"250"
0 0 17 3 1 #" "
0 0 17 3 13 #"\"magenta\") = "
0 6           4 17 1114
(20
 #"(#(struct:overlay #(struct:translate 80.0 0 #4=#(struct:overlay #(st"
 #"ruct:translate 40.0 0 #3=#(struct:overlay #(struct:translate 20.0 0 "
 #"#2=#(struct:overlay #(struct:translate 10.0 0 #1=#(struct:overlay #("
 #"struct:translate 5.0 0 #0=#(struct:translate -0.0 8.660254037844387 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.000000000000002 -8."
 #"660254037844387 0 0)) outline \"magenta\"))) #(struct:translate 0 8."
 #"660254037844387 #(struct:overlay #(struct:translate 0 0 #0#) #(struc"
 #"t:translate 10.0 0.0 #0#))))) #(struct:translate 0 17.32050807568877"
 #"5 #(struct:overlay #(struct:translate 0 0 #1#) #(struct:translate 20"
 #".0 0.0 #1#))))) #(struct:translate 0 34.64101615137755 #(struct:over"
 #"lay #(struct:translate 0 0 #2#) #(struct:translate 40.0 0.0 #2#)))))"
 #" #(struct:translate 0 69.2820323027551 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #3#) #(struct:translate 80.0 0.0 #3#))))) #(struct:transl"
 #"ate 0 138.5640646055102 #(struct:overlay #(struct:translate 0 0 #4#)"
 #" #(struct:translate 160.0 0.0 #4#)))) #(struct:bb 320.0 277.12812921"
 #"10204 277.1281292110204) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sierpinski"
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 70
(21
 #";; se o lado for muito pequeno(<=10), desenha um tri\303\242ngulo de"
 #" lado 10"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 4 #")  ("
0 0 14 3 17 #"desenha-triangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 9 #";; sen\303\243o"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 75
(22
 #";;      desenha um tri\303\242ngulo de sierpinksi com a metade do ta"
 #"manho do lado"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 52
#";;      e d\303\241 o nome de TRIANGULO para este desenho:"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TRIANGULO"
0 0 24 3 2 #" ("
0 0 14 3 10 #"sierpinski"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               )"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 70
(23
 #";; e monta a imagem do tri\303\242ngulo de sierpinski colocando um T"
 #"RIANGULO"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 35 #";; acima de dois outros TRIANGULOs:"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"above"
0 0 24 3 1 #" "
0 0 14 3 9 #"TRIANGULO"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 9 #"TRIANGULO"
0 0 24 3 1 #" "
0 0 14 3 9 #"TRIANGULO"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 103
(24
 #";; Argumenta\303\247\303\243o de term"
 #"ina\303\247\303\243o da fun\303\247\303\243o sier"
 #"pinski: A cada chamada da fun\303\247\303\243o sierpinski, o lado"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(25
 #";; do tri\303\242ngulo ser\303\241 dividido em dois, tornando-se cad"
 #"a vez menor e, portanto, mais"
) 0 0 24 29 1 #"\n"
0 0 17 3 33 #";; pr\303\263ximo da solu\303\247\303\243o trivial."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47
#";; Exemplos de chamadas da fun\303\247\303\243o sierpinski:"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"sierpinski"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"sierpinski"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"sierpinski"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77 15 0 0 24 29 1 #"\n"
0 0 17 3 33 #";; 2: Fun\303\247\303\243o desenha-sierpinski"
0 0 24 29 1 #"\n"
0 0 17 3 77 15 0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Definindo algumas figuras"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; calcula-lado: Figura -> N\303\272mero"
0 0 24 29 1 #"\n"
0 0 17 3 65
(26
 #";; Obj: Dada uma figura, calcu"
 #"la o lado do tri\303\242ngulo equil\303\241tero"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";; formado pela mesma"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Exemplos: (calcula-lado Figura1) = 288.67"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;           (calcula-lado Figura2) = 138.56"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"calcula-lado"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 24 3 2 #" ("
0 0 14 3 12 #"calcula-lado"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura1"
0 0 24 3 2 #") "
0 0 21 3 3 #"288"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-within"
0 0 24 3 2 #" ("
0 0 14 3 12 #"calcula-lado"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura2"
0 0 24 3 2 #") "
0 0 21 3 3 #"138"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; desenha-sierpinski: Figura -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 77
(27
 #";; Obj: Dado um argumento do tipo Figura, desenha um tri\303\242ngul"
 #"o de Sierpinski"
) 0 0 24 29 1 #"\n"
0 0 17 3 15 #";; equil\303\241tero."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;("
0 0 17 3 18 #"desenha-sierpinski"
0 0 17 3 1 #" "
0 0 17 3 11 #"Figura1) = "
0 6           4 17 1110
(28
 #"(#(struct:overlay #(struct:translate 80.0 0 #4=#(struct:overlay #(st"
 #"ruct:translate 40.0 0 #3=#(struct:overlay #(struct:translate 20.0 0 "
 #"#2=#(struct:overlay #(struct:translate 10.0 0 #1=#(struct:overlay #("
 #"struct:translate 5.0 0 #0=#(struct:translate -0.0 8.660254037844387 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.000000000000002 -8."
 #"660254037844387 0 0)) outline \"red\"))) #(struct:translate 0 8.6602"
 #"54037844387 #(struct:overlay #(struct:translate 0 0 #0#) #(struct:tr"
 #"anslate 10.0 0.0 #0#))))) #(struct:translate 0 17.320508075688775 #("
 #"struct:overlay #(struct:translate 0 0 #1#) #(struct:translate 20.0 0"
 #".0 #1#))))) #(struct:translate 0 34.64101615137755 #(struct:overlay "
 #"#(struct:translate 0 0 #2#) #(struct:translate 40.0 0.0 #2#))))) #(s"
 #"truct:translate 0 69.2820323027551 #(struct:overlay #(struct:transla"
 #"te 0 0 #3#) #(struct:translate 80.0 0.0 #3#))))) #(struct:translate "
 #"0 138.5640646055102 #(struct:overlay #(struct:translate 0 0 #4#) #(s"
 #"truct:translate 160.0 0.0 #4#)))) #(struct:bb 320.0 277.128129211020"
 #"4 277.1281292110204) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";;("
0 0 17 3 18 #"desenha-sierpinski"
0 0 17 3 1 #" "
0 0 17 3 11 #"Figura2) = "
0 6           4 17 943
(29
 #"(#(struct:overlay #(struct:translate 40.0 0 #3=#(struct:overlay #(st"
 #"ruct:translate 20.0 0 #2=#(struct:overlay #(struct:translate 10.0 0 "
 #"#1=#(struct:overlay #(struct:translate 5.0 0 #0=#(struct:translate -"
 #"0.0 8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0"
 #" 5.000000000000002 -8.660254037844387 0 0)) outline \"cyan\"))) #(st"
 #"ruct:translate 0 8.660254037844387 #(struct:overlay #(struct:transla"
 #"te 0 0 #0#) #(struct:translate 10.0 0.0 #0#))))) #(struct:translate "
 #"0 17.320508075688775 #(struct:overlay #(struct:translate 0 0 #1#) #("
 #"struct:translate 20.0 0.0 #1#))))) #(struct:translate 0 34.641016151"
 #"37755 #(struct:overlay #(struct:translate 0 0 #2#) #(struct:translat"
 #"e 40.0 0.0 #2#))))) #(struct:translate 0 69.2820323027551 #(struct:o"
 #"verlay #(struct:translate 0 0 #3#) #(struct:translate 80.0 0.0 #3#))"
 #")) #(struct:bb 160.0 138.5640646055102 138.5640646055102) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";;("
0 0 17 3 18 #"desenha-sierpinski"
0 0 17 3 1 #" "
0 0 17 3 10 #"Figura3) ="
0 0 17 3 1 #" "
0 6           4 17 444
(30
 #"(#(struct:overlay #(struct:translate 5.0 0 #0=#(struct:translate -0."
 #"0 8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5"
 #".000000000000002 -8.660254037844387 0 0)) outline \"green\"))) #(str"
 #"uct:translate 0 8.660254037844387 #(struct:overlay #(struct:translat"
 #"e 0 0 #0#) #(struct:translate 10.0 0.0 #0#)))) #(struct:bb 20.0 17.3"
 #"20508075688775 17.320508075688775) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"desenha-sierpinski"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"sierpinski"
0 0 24 3 2 #" ("
0 0 14 3 12 #"calcula-lado"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 8 #"gera-cor"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 18 #"desenha-sierpinski"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 18 #"desenha-sierpinski"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 18 #"desenha-sierpinski"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77 15 0 0 24 29 1 #"\n"
0 0 17 3 29 #";; 3: Fun\303\247\303\243o desenha-boneco"
0 0 24 29 1 #"\n"
0 0 17 3 77 15 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; desenha-boneco: Figura -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 84
(31
 #";;Obj: Dado um argumento do tipo Figura, desenha um boneco palito ne"
 #"sta cor, e com a"
) 0 0 24 29 1 #"\n"
0 0 17 3 15 #";; altura dada."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;(desenha-boneco Figura1) = "
0 6           4 17 2139
(32
 #"(#(struct:overlay #(struct:translate 15.355489780439527 0 #(struct:t"
 #"ranslate 125/4 125/4 #(struct:ellipse 125/2 125/2 0 255 \"red\"))) #"
 #"(struct:translate 0 125/2 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 22.610912915882768 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:translate 18.042195912175806 0.0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 -18.042195912175806 -0."
 #"0 0 0) #(struct:pulled-point 0 0 -18.042195912175806 20.833333333333"
 #"332 0 0) #(struct:pulled-point 0 0 0.0 10.416666666666671 0 0)) 255 "
 #"\"yellow\"))) #(struct:translate 18.042195912175806 0.0 #(struct:ove"
 #"rlay #(struct:translate 0 4.4642857142857135 #(struct:translate 125/"
 #"21 125/21 #(struct:ellipse 250/21 250/21 0 255 \"yellow\"))) #(struc"
 #"t:translate 250/21 0 #(struct:translate -0.0 20.833333333333332 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 18.042195912175806 0.0 0 0) "
 #"#(struct:pulled-point 0 0 18.042195912175806 -20.833333333333332 0 0"
 #") #(struct:pulled-point 0 0 0.0 -10.416666666666671 0 0)) 255 \"yell"
 #"ow\"))))))) #(struct:translate 0 20.833333333333332 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 2.6041"
 #"666666666785 #(struct:translate 45.105489780439555 0.0 #(struct:line"
 #"-segment #(struct:point 0.0 -0.0) #(struct:point -45.105489780439555"
 #" 78.12499999999997) \"red\"))) #(struct:translate 46.105489780439555"
 #" 0 #(struct:translate 0 0 #(struct:line-segment #(struct:point 0 0) "
 #"#(struct:point 0 250/3) \"red\"))))) #(struct:translate 47.105489780"
 #"439555 2.6041666666666643 #(struct:translate 0.0 0.0 #(struct:line-s"
 #"egment #(struct:point -0.0 -0.0) #(struct:point 45.105489780439505 7"
 #"8.125) \"red\"))))))) #(struct:translate 0.5 105.16666666666666 #(st"
 #"ruct:overlay #(struct:translate 0 1.4210854715202004e-014 #(struct:t"
 #"ranslate 45.105489780439555 0.0 #(struct:line-segment #(struct:point"
 #" 0.0 -0.0) #(struct:point -45.105489780439555 78.12499999999997) \"r"
 #"ed\"))) #(struct:translate 46.105489780439555 0 #(struct:translate 0"
 #".0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:poin"
 #"t 45.105489780439505 78.125) \"red\")))))))) #(struct:bb 93.21097956"
 #"087905 246.79166666666666 246.79166666666666) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 30 #";; (desenha-boneco Figura2) = "
0 6           4 17 2019
(33
 #"(#(struct:overlay #(struct:translate 8.15063509461097 0 #(struct:tra"
 #"nslate 15 15 #(struct:ellipse 30 30 0 255 \"cyan\"))) #(struct:trans"
 #"late 0 30 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 11.633238199623726 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 8.660254037844387 0.0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 -8.660254037844387 -0.0 0 0) #(struct:pu"
 #"lled-point 0 0 -8.660254037844387 10.0 0 0) #(struct:pulled-point 0 "
 #"0 0.0 5.000000000000002 0 0)) 255 \"green\"))) #(struct:translate 8."
 #"660254037844387 0.0 #(struct:overlay #(struct:translate 0 2.14285714"
 #"2857143 #(struct:translate 20/7 20/7 #(struct:ellipse 40/7 40/7 0 25"
 #"5 \"green\"))) #(struct:translate 40/7 0 #(struct:translate -0.0 10."
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 8.660254037844387 0.0 "
 #"0 0) #(struct:pulled-point 0 0 8.660254037844387 -10.0 0 0) #(struct"
 #":pulled-point 0 0 0.0 -5.000000000000002 0 0)) 255 \"green\"))))))) "
 #"#(struct:translate 0 10.0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 1.2500000000000107 #(struct:tran"
 #"slate 21.65063509461098 0.0 #(struct:line-segment #(struct:point 0.0"
 #" -0.0) #(struct:point -21.65063509461098 37.49999999999998) \"cyan\""
 #"))) #(struct:translate 22.65063509461098 0 #(struct:translate 0 0 #("
 #"struct:line-segment #(struct:poin"
 #"t 0 0) #(struct:point 0 40) \"cyan\"))))) #(struct:translate 23.6506"
 #"3509461098 1.2500000000000036 #(struct:translate 0.0 0.0 #(struct:li"
 #"ne-segment #(struct:point -0.0 -0.0) #(struct:point 21.6506350946109"
 #"6 37.49999999999999) \"cyan\"))))))) #(struct:translate 0.5 51.0 #(s"
 #"truct:overlay #(struct:translate 0 7.105427357601002e-015 #(struct:t"
 #"ranslate 21.65063509461098 0.0 #(struct:line-segment #(struct:point "
 #"0.0 -0.0) #(struct:point -21.65063509461098 37.49999999999998) \"cya"
 #"n\"))) #(struct:translate 22.65063509461098 0 #(struct:translate 0.0"
 #" 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point "
 #"21.65063509461096 37.49999999999999) \"cyan\")))))))) #(struct:bb 46"
 #".30127018922194 119.5 119.5) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"desenha-boneco"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"TAM"
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 61
#";; Membros do corpo s\303\243o proporcionais ao restante da altura."
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 25 #";; N\303\243o considera gravata"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 68
(34
 #";; restante da altura: TAM - (CABE\303\207A (di\303\242metro) + CORP"
 #"O (altura) )"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"COMPMEMBROS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 3 #"TAM"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"24"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"COR"
0 0 24 3 2 #" ("
0 0 14 3 8 #"gera-cor"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"COR-GRAVATA"
0 0 24 3 2 #" ("
0 0 14 3 8 #"gera-cor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"CABECA"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 3 #"TAM"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"COR"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CORPO"
0 0 24 3 2 #" ("
0 0 14 3 4 #"line"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 3 #"TAM"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 14 3 3 #"COR"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 52
#";;Gravata desconsiderada no c\303\241lculo da altura total"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"GRAVATA"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"-90"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 3 #"TAM"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 11 #"COR-GRAVATA"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 3 #"TAM"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 11 #"COR-GRAVATA"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 3 #"TAM"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 11 #"COR-GRAVATA"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                     ) )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"BRACO-DIR"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"-30"
0 0 24 3 2 #" ("
0 0 14 3 4 #"line"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 11 #"COMPMEMBROS"
0 0 24 3 1 #" "
0 0 14 3 3 #"COR"
0 0 24 3 4 #" )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"BRACO-ESQ"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #" ("
0 0 14 3 4 #"line"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 11 #"COMPMEMBROS"
0 0 24 3 1 #" "
0 0 14 3 3 #"COR"
0 0 24 3 4 #" )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"PERNA-DIR"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"-30"
0 0 24 3 2 #" ("
0 0 14 3 4 #"line"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 11 #"COMPMEMBROS"
0 0 24 3 1 #" "
0 0 14 3 3 #"COR"
0 0 24 3 4 #" )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"PERNA-ESQ"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #" ("
0 0 14 3 4 #"line"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 11 #"COMPMEMBROS"
0 0 24 3 1 #" "
0 0 14 3 3 #"COR"
0 0 24 3 4 #" )))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"above"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 6 #"CABECA"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 5 #"above"
0 0 24 3 1 #" "
0 0 14 3 7 #"GRAVATA"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 9 #"BRACO-DIR"
0 0 24 3 1 #" "
0 0 14 3 5 #"CORPO"
0 0 24 3 1 #" "
0 0 14 3 9 #"BRACO-ESQ"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 9 #"PERNA-DIR"
0 0 24 3 1 #" "
0 0 14 3 9 #"PERNA-ESQ"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"desenha-boneco"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"desenha-boneco"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77 15 0 0 24 29 1 #"\n"
0 0 17 3 30 #";; 4: Fun\303\247\303\243o desenha-figuras"
0 0 24 29 1 #"\n"
0 0 17 3 77 15 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; desenha-figuras: (Figura->Imagem) Figura -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 87
(35
 #";; Obj: Dada uma fun\303\247\303\243o que desenha a figura e uma fig"
 #"ura, desenha v\303\241rias figuras na"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";; cena, variando atributos da mesma"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 6           4 17 29831
(36
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 400) #(struct:point 0 400)) #(struct:translate 0 -6.75 #(st"
 #"ruct:overlay #(struct:translate 60.84936490538903 0 #(struct:overlay"
 #" #(struct:translate 8.15063509461097 0 #(struct:translate 15 15 #(st"
 #"ruct:ellipse 30 30 0 255 \"cyan\"))) #(struct:translate 0 30 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 11.633238199623726 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 8.660254037844387 0.0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 -8.660254037844387 -0.0 0 0) #(struct:pulled-point 0 0 -8"
 #".660254037844387 10.0 0 0) #(struct:pulled-point 0 0 0.0 5.000000000"
 #"000002 0 0)) 255 \"green\"))) #(struct:translate 8.660254037844387 0"
 #".0 #(struct:overlay #(struct:translate 0 2.142857142857143 #(struct:"
 #"translate 20/7 20/7 #(struct:ellipse 40/7 40/7 0 255 \"green\"))) #("
 #"struct:translate 40/7 0 #(struct:translate -0.0 10.0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 8.660254037844387 0.0 0 0) #(struct:pul"
 #"led-point 0 0 8.660254037844387 -10.0 0 0) #(struct:pulled-point 0 0"
 #" 0.0 -5.000000000000002 0 0)) 255 \"green\"))))))) #(struct:translat"
 #"e 0 10.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 1.2500000000000107 #(struct:translate 21.65063509"
 #"461098 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct:p"
 #"oint -21.65063509461098 37.49999999999998) \"cyan\"))) #(struct:tran"
 #"slate 22.65063509461098 0 #(struct:translate 0 0 #(struct:line-segme"
 #"nt #(struct:point 0 0) #(struct:point 0 40) \"cyan\"))))) #(struct:t"
 #"ranslate 23.65063509461098 1.2500000000000036 #(struct:translate 0.0"
 #" 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point "
 #"21.65063509461096 37.49999999999999) \"cyan\"))))))) #(struct:transl"
 #"ate 0.5 51.0 #(struct:overlay #(struct:translate 0 7.105427357601002"
 #"e-015 #(struct:translate 21.65063509461098 0.0 #(struct:line-segment"
 #" #(struct:point 0.0 -0.0) #(struct:point -21.65063509461098 37.49999"
 #"999999998) \"cyan\"))) #(struct:translate 22.65063509461098 0 #(stru"
 #"ct:translate 0.0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0)"
 #" #(struct:point 21.65063509461096 37.49999999999999) \"cyan\")))))))"
 #")) #(struct:translate 0 6.75 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 89.179491924"
 #"31122 88.0 #(struct:overlay #(struct:translate 6.820508075688778 0 #"
 #"(struct:translate 12 12 #(struct:ellipse 24 24 0 255 \"blue\"))) #(s"
 #"truct:translate 0 24 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 9.606590559698983 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 6.92820323027551 0.0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 -6.92820323027551 -0.0 0 0) #(s"
 #"truct:pulled-point 0 0 -6.92820323027551 8.0 0 0) #(struct:pulled-po"
 #"int 0 0 0.0 4.000000000000002 0 0)) 255 \"cyan\"))) #(struct:transla"
 #"te 6.92820323027551 0.0 #(struct:overlay #(struct:translate 0 1.7142"
 #"857142857144 #(struct:translate 16/7 16/7 #(struct:ellipse 32/7 32/7"
 #" 0 255 \"cyan\"))) #(struct:translate 32/7 0 #(struct:translate -0.0"
 #" 8.0 #(struct:polygon (#(struct:pulled-point 0 0 6.92820323027551 0."
 #"0 0 0) #(struct:pulled-point 0 0 6.92820323027551 -8.0 0 0) #(struct"
 #":pulled-point 0 0 0.0 -4.000000000000002 0 0)) 255 \"cyan\"))))))) #"
 #"(struct:translate 0 8.0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 1.0000000000000036 #(struct:transl"
 #"ate 17.32050807568879 0.0 #(struct:line-segment #(struct:point 0.0 -"
 #"0.0) #(struct:point -17.32050807568879 29.999999999999993) \"blue\")"
 #")) #(struct:translate 18.32050807568879 0 #(struct:translate 0 0 #(s"
 #"truct:line-segment #(struct:point 0 0) #(struct:point 0 32) \"blue\""
 #"))))) #(struct:translate 19.32050807568879 0.9999999999999982 #(stru"
 #"ct:translate 0.0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0)"
 #" #(struct:point 17.32050807568877 30.000000000000004) \"blue\"))))))"
 #") #(struct:translate 0.5 41.0 #(struct:overlay #(struct:translate 0 "
 #"5.329070518200751e-015 #(struct:translate 17.32050807568879 0.0 #(st"
 #"ruct:line-segment #(struct:point 0.0 -0.0) #(struct:point -17.320508"
 #"07568879 29.999999999999993) \"blue\"))) #(struct:translate 18.32050"
 #"807568879 0 #(struct:translate 0.0 0.0 #(struct:line-segment #(struc"
 #"t:point -0.0 -0.0) #(struct:point 17.32050807568877 30.0000000000000"
 #"04) \"blue\"))))))))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 400 0) #(struct:point 400 400) #(struct:p"
 #"oint 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 108.60750914762463 104.30208333333333 #(struct:overlay #(struct:"
 #"translate 5.767490852375374 0 #(struct:translate 77/8 77/8 #(struct:"
 #"ellipse 77/4 77/4 0 255 \"yellow\"))) #(struct:translate 0 77/4 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 8.002161178091892 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 5.556996340950149 0.0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 -5.556996340950149 -0.0 0 0) #(struct:pulled-point 0 0 "
 #"-5.556996340950149 6.416666666666667 0 0) #(struct:pulled-point 0 0 "
 #"0.0 3.208333333333335 0 0)) 255 \"blue\"))) #(struct:translate 5.556"
 #"996340950149 0.0 #(struct:overlay #(struct:translate 0 1.37500000000"
 #"00002 #(struct:translate 11/6 11/6 #(struct:ellipse 11/3 11/3 0 255 "
 #"\"blue\"))) #(struct:translate 11/3 0 #(struct:translate -0.0 6.4166"
 #"66666666667 #(struct:polygon (#(struct:pulled-point 0 0 5.5569963409"
 #"50149 0.0 0 0) #(struct:pulled-point 0 0 5.556996340950149 -6.416666"
 #"666666667 0 0) #(struct:pulled-point 0 0 0.0 -3.208333333333335 0 0)"
 #") 255 \"blue\"))))))) #(struct:translate 0 6.416666666666667 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0.8020833333333393 #(struct:translate 13.892490852375381 0.0 #(st"
 #"ruct:line-segment #(struct:point 0.0 -0.0) #(struct:point -13.892490"
 #"852375381 24.06249999999999) \"yellow\"))) #(struct:translate 14.892"
 #"490852375381 0 #(struct:translate 0 0 #(struct:line-segment #(struct"
 #":point 0 0) #(struct:point 0 77/3) \"yellow\"))))) #(struct:translat"
 #"e 15.892490852375381 0.8020833333333339 #(struct:translate 0.0 0.0 #"
 #"(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point 13.892"
 #"490852375367 24.0625) \"yellow\"))))))) #(struct:translate 0.5 33.08"
 #"3333333333336 #(struct:overlay #(struct:translate 0 5.32907051820075"
 #"1e-015 #(struct:translate 13.892490852375381 0.0 #(struct:line-segme"
 #"nt #(struct:point 0.0 -0.0) #(struct:point -13.892490852375381 24.06"
 #"249999999999) \"yellow\"))) #(struct:translate 14.892490852375381 0 "
 #"#(struct:translate 0.0 0.0 #(struct:line-segment #(struct:point -0.0"
 #" -0.0) #(struct:point 13.892490852375367 24.0625) \"yellow\"))))))))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 128.313838534451"
 #" 193.64583333333334 #(struct:overlay #(struct:translate 4.9361614655"
 #"49002 0 #(struct:translate 31/4 31/4 #(struct:ellipse 31/2 31/2 0 25"
 #"5 \"cyan\"))) #(struct:translate 0 31/2 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 6.735506403138926 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 4.4744645"
 #"862196 0.0 #(struct:polygon (#(struct:pulled-point 0 0 -4.4744645862"
 #"196 -0.0 0 0) #(struct:pulled-point 0 0 -4.4744645862196 5.166666666"
 #"666667 0 0) #(struct:pulled-point 0 0 0.0 2.583333333333335 0 0)) 25"
 #"5 \"green\"))) #(struct:translate 4.4744645862196 0.0 #(struct:overl"
 #"ay #(struct:translate 0 1.1071428571428572 #(struct:translate 31/21 "
 #"31/21 #(struct:ellipse 62/21 62/21 0 255 \"green\"))) #(struct:trans"
 #"late 62/21 0 #(struct:translate -0.0 5.166666666666667 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 4.4744645862196 0.0 0 0) #(struct:pul"
 #"led-point 0 0 4.4744645862196 -5.166666666666667 0 0) #(struct:pulle"
 #"d-point 0 0 0.0 -2.583333333333335 0 0)) 255 \"green\"))))))) #(stru"
 #"ct:translate 0 5.166666666666667 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0.6458333333333375 #(stru"
 #"ct:translate 11.18616146554901 0.0 #(struct:line-segment #(struct:po"
 #"int 0.0 -0.0) #(struct:point -11.18616146554901 19.374999999999993) "
 #"\"cyan\"))) #(struct:translate 12.18616146554901 0 #(struct:translat"
 #"e 0 0 #(struct:line-segment #(struct:point 0 0) #(struct:point 0 62/"
 #"3) \"cyan\"))))) #(struct:translate 13.18616146554901 0.645833333333"
 #"3339 #(struct:translate 0.0 0.0 #(struct:line-segment #(struct:point"
 #" -0.0 -0.0) #(struct:point 11.186161465548997 19.375) \"cyan\"))))))"
 #") #(struct:translate 0.5 26.833333333333336 #(struct:overlay #(struc"
 #"t:translate 0 3.552713678800501e-015 #(struct:translate 11.186161465"
 #"54901 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct:po"
 #"int -11.18616146554901 19.374999999999993) \"cyan\"))) #(struct:tran"
 #"slate 12.18616146554901 0 #(struct:translate 0.0 0.0 #(struct:line-s"
 #"egment #(struct:point -0.0 -0.0) #(struct:point 11.186161465548997 1"
 #"9.375) \"cyan\"))))))))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 400 0) #(struct:point 400 400) #(struc"
 #"t:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 209.4789020439121 241.52083333333334 #(struct:overlay #(struc"
 #"t:translate 4.271097956087905 0 #(struct:translate 25/4 25/4 #(struc"
 #"t:ellipse 25/2 25/2 0 255 \"blue\"))) #(struct:translate 0 25/2 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 5.722182583176553 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 3.6084391824351614 0.0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 -3.6084391824351614 -0.0 0 0) #(struct:pulled-point 0 "
 #"0 -3.6084391824351614 4.166666666666667 0 0) #(struct:pulled-point 0"
 #" 0 0.0 2.0833333333333344 0 0)) 255 \"cyan\"))) #(struct:translate 3"
 #".6084391824351614 0.0 #(struct:overlay #(struct:translate 0 0.892857"
 #"142857143 #(struct:translate 25/21 25/21 #(struct:ellipse 50/21 50/2"
 #"1 0 255 \"cyan\"))) #(struct:translate 50/21 0 #(struct:translate -0"
 #".0 4.166666666666667 #(struct:polygon (#(struct:pulled-point 0 0 3.6"
 #"084391824351614 0.0 0 0) #(struct:pulled-point 0 0 3.608439182435161"
 #"4 -4.166666666666667 0 0) #(struct:pulled-point 0 0 0.0 -2.083333333"
 #"3333344 0 0)) 255 \"cyan\"))))))) #(struct:translate 0 4.16666666666"
 #"6667 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0.5208333333333375 #(struct:translate 9.0210979560879"
 #"1 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct:point "
 #"-9.02109795608791 15.624999999999993) \"blue\"))) #(struct:translate"
 #" 10.02109795608791 0 #(struct:translate 0 0 #(struct:line-segment #("
 #"struct:point 0 0) #(struct:point 0 50/3) \"blue\"))))) #(struct:tran"
 #"slate 11.02109795608791 0.5208333333333339 #(struct:translate 0.0 0."
 #"0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point 9.0"
 #"210979560879 15.625) \"blue\"))))))) #(struct:translate 0.5 21.83333"
 #"3333333336 #(struct:overlay #(struct:translate 0 3.552713678800501e-"
 #"015 #(struct:translate 9.02109795608791 0.0 #(struct:line-segment #("
 #"struct:point 0.0 -0.0) #(struct:point -9.02109795608791 15.624999999"
 #"999993) \"blue\"))) #(struct:translate 10.02109795608791 0 #(struct:"
 #"translate 0.0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #("
 #"struct:point 9.0210979560879 15.625) \"blue\"))))))))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #"
 #"(struct:point 400 400) #(struct:point 0 400)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 251.28312163512967 255.41666666"
 #"666666 #(struct:overlay #(struct:translate 3.7168783648703236 0 #(st"
 #"ruct:translate 5 5 #(struct:ellipse 10 10 0 255 \"cyan\"))) #(struct"
 #":translate 0 10 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 4.877746066541242 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate 2.886751345948129 0.0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 -2.886751345948129 -0.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -2.886751345948129 3.3333333333333335 0 0) #(str"
 #"uct:pulled-point 0 0 0.0 1.6666666666666674 0 0)) 255 \"green\"))) #"
 #"(struct:translate 2.886751345948129 0.0 #(struct:overlay #(struct:tr"
 #"anslate 0 0.7142857142857144 #(struct:translate 20/21 20/21 #(struct"
 #":ellipse 40/21 40/21 0 255 \"green\"))) #(struct:translate 40/21 0 #"
 #"(struct:translate -0.0 3.3333333333333335 #(struct:polygon (#(struct"
 #":pulled-point 0 0 2.886751345948129 0.0 0 0) #(struct:pulled-point 0"
 #" 0 2.886751345948129 -3.3333333333333335 0 0) #(struct:pulled-point "
 #"0 0 0.0 -1.6666666666666674 0 0)) 255 \"green\"))))))) #(struct:tran"
 #"slate 0 3.3333333333333335 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0.4166666666666696 #(struct:tra"
 #"nslate 7.216878364870327 0.0 #(struct:line-segment #(struct:point 0."
 #"0 -0.0) #(struct:point -7.216878364870327 12.499999999999995) \"cyan"
 #"\"))) #(struct:translate 8.216878364870327 0 #(struct:translate 0 0 "
 #"#(struct:line-segment #(struct:point 0 0) #(struct:point 0 40/3) \"c"
 #"yan\"))))) #(struct:translate 9.216878364870327 0.41666666666666785 "
 #"#(struct:translate 0.0 0.0 #(struct:line-segment #(struct:point -0.0"
 #" -0.0) #(struct:point 7.21687836487032 12.499999999999998) \"cyan\")"
 #")))))) #(struct:translate 0.5 17.666666666666668 #(struct:overlay #("
 #"struct:translate 0 1.7763568394002505e-015 #(struct:translate 7.2168"
 #"78364870327 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(str"
 #"uct:point -7.216878364870327 12.499999999999995) \"cyan\"))) #(struc"
 #"t:translate 8.216878364870327 0 #(struct:translate 0.0 0.0 #(struct:"
 #"line-segment #(struct:point -0.0 -0.0) #(struct:point 7.216878364870"
 #"32 12.499999999999998) \"cyan\"))))))))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point "
 #"400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 293.7264973081037 314.3333333333333 #(struct:"
 #"overlay #(struct:translate 3.27350269189626 0 #(struct:translate 4 4"
 #" #(struct:ellipse 8 8 0 255 \"red\"))) #(struct:translate 0 8 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 4.202196853232995 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 2.309401076758503 0.0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 -2.309401076758503 -0.0 0 0) #(struct:pulled-point 0 0 -2"
 #".309401076758503 2.6666666666666665 0 0) #(struct:pulled-point 0 0 0"
 #".0 1.333333333333334 0 0)) 255 \"yellow\"))) #(struct:translate 2.30"
 #"9401076758503 0.0 #(struct:overlay #(struct:translate 0 0.5714285714"
 #"285714 #(struct:translate 16/21 16/21 #(struct:ellipse 32/21 32/21 0"
 #" 255 \"yellow\"))) #(struct:translate 32/21 0 #(struct:translate -0."
 #"0 2.6666666666666665 #(struct:polygon (#(struct:pulled-point 0 0 2.3"
 #"09401076758503 0.0 0 0) #(struct:pulled-point 0 0 2.309401076758503 "
 #"-2.6666666666666665 0 0) #(struct:pulled-point 0 0 0.0 -1.3333333333"
 #"33334 0 0)) 255 \"yellow\"))))))) #(struct:translate 0 2.66666666666"
 #"66665 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0.3333333333333348 #(struct:translate 5.773502691896"
 #"263 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct:poin"
 #"t -5.773502691896263 9.999999999999996) \"red\"))) #(struct:translat"
 #"e 6.773502691896263 0 #(struct:translate 0 0 #(struct:line-segment #"
 #"(struct:point 0 0) #(struct:point 0 32/3) \"red\"))))) #(struct:tran"
 #"slate 7.773502691896263 0.33333333333333304 #(struct:translate 0.0 0"
 #".0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point 5."
 #"773502691896256 10.0) \"red\"))))))) #(struct:translate 0.5 14.33333"
 #"3333333332 #(struct:overlay #(struct:translate 0 1.7763568394002505e"
 #"-015 #(struct:translate 5.773502691896263 0.0 #(struct:line-segment "
 #"#(struct:point 0.0 -0.0) #(struct:point -5.773502691896263 9.9999999"
 #"99999996) \"red\"))) #(struct:translate 6.773502691896263 0 #(struct"
 #":translate 0.0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #"
 #"(struct:point 5.773502691896256 10.0) \"red\"))))))))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #"
 #"(struct:point 400 400) #(struct:point 0 400)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 321.80902906283427 354.27083333"
 #"33333 #(struct:overlay #(struct:translate 2.9409709371657105 0 #(str"
 #"uct:translate 13/4 13/4 #(struct:ellipse 13/2 13/2 0 255 \"blue\")))"
 #" #(struct:translate 0 13/2 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 3.6955349432518076 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 1.8763883748662837 0."
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 -1.8763883748662837 -0"
 #".0 0 0) #(struct:pulled-point 0 0 -1.8763883748662837 2.166666666666"
 #"6665 0 0) #(struct:pulled-point 0 0 0.0 1.0833333333333337 0 0)) 255"
 #" \"cyan\"))) #(struct:translate 1.8763883748662837 0.0 #(struct:over"
 #"lay #(struct:translate 0 0.4642857142857142 #(struct:translate 13/21"
 #" 13/21 #(struct:ellipse 26/21 26/21 0 255 \"cyan\"))) #(struct:trans"
 #"late 26/21 0 #(struct:translate -0.0 2.1666666666666665 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 1.8763883748662837 0.0 0 0) #(struct"
 #":pulled-point 0 0 1.8763883748662837 -2.1666666666666665 0 0) #(stru"
 #"ct:pulled-point 0 0 0.0 -1.0833333333333337 0 0)) 255 \"cyan\"))))))"
 #") #(struct:translate 0 2.1666666666666665 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0.27083333333333"
 #"48 #(struct:translate 4.690970937165713 0.0 #(struct:line-segment #("
 #"struct:point 0.0 -0.0) #(struct:point -4.690970937165713 8.124999999"
 #"999996) \"blue\"))) #(struct:translate 5.690970937165713 0 #(struct:"
 #"translate 0 0 #(struct:line-segment #(struct:point 0 0) #(struct:poi"
 #"nt 0 26/3) \"blue\"))))) #(struct:translate 6.690970937165713 0.2708"
 #"3333333333304 #(struct:translate 0.0 0.0 #(struct:line-segment #(str"
 #"uct:point -0.0 -0.0) #(struct:poi"
 #"nt 4.690970937165708 8.125) \"blue\"))))))) #(struct:translate 0.5 1"
 #"1.833333333333332 #(struct:overlay #(struct:translate 0 1.7763568394"
 #"002505e-015 #(struct:translate 4.690970937165713 0.0 #(struct:line-s"
 #"egment #(struct:point 0.0 -0.0) #(struct:point -4.690970937165713 8."
 #"124999999999996) \"blue\"))) #(struct:translate 5.690970937165713 0 "
 #"#(struct:translate 0.0 0.0 #(struct:line-segment #(struct:point -0.0"
 #" -0.0) #(struct:point 4.690970937165708 8.125) \"blue\"))))))))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 384.71113885844306 41"
 #"4.71875 #(struct:overlay #(struct:translate 2.6638611415569216 0 #(s"
 #"truct:translate 21/8 21/8 #(struct:ellipse 21/4 21/4 0 255 \"green\""
 #"))) #(struct:translate 0 21/4 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 3.2733166849341537 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 1.5155444566227678"
 #" 0.0 #(struct:polygon (#(struct:pulled-point 0 0 -1.5155444566227678"
 #" -0.0 0 0) #(struct:pulled-point 0 0 -1.5155444566227678 1.75 0 0) #"
 #"(struct:pulled-point 0 0 0.0 0.8750000000000004 0 0)) 255 \"red\")))"
 #" #(struct:translate 1.5155444566227678 0.0 #(struct:overlay #(struct"
 #":translate 0 0.375 #(struct:translate 1/2 1/2 #(struct:ellipse 1 1 0"
 #" 255 \"red\"))) #(struct:translate 1 0 #(struct:translate -0.0 1.75 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 1.5155444566227678 0.0 0"
 #" 0) #(struct:pulled-point 0 0 1.5155444566227678 -1.75 0 0) #(struct"
 #":pulled-point 0 0 0.0 -0.8750000000000004 0 0)) 255 \"red\"))))))) #"
 #"(struct:translate 0 1.75 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0.2187500000000009 #(struct:trans"
 #"late 3.788861141556923 0.0 #(struct:line-segment #(struct:point 0.0 "
 #"-0.0) #(struct:point -3.788861141556923 6.562499999999998) \"green\""
 #"))) #(struct:translate 4.788861141556923 0 #(struct:translate 0 0 #("
 #"struct:line-segment #(struct:poin"
 #"t 0 0) #(struct:point 0 7) \"green\"))))) #(struct:translate 5.78886"
 #"1141556923 0.21874999999999956 #(struct:translate 0.0 0.0 #(struct:l"
 #"ine-segment #(struct:point -0.0 -0.0) #(struct:point 3.7888611415569"
 #"19 6.562500000000001) \"green\"))))))) #(struct:translate 0.5 9.75 #"
 #"(struct:overlay #(struct:translate 0 1.3322676295501878e-015 #(struc"
 #"t:translate 3.788861141556923 0.0 #(struct:line-segment #(struct:poi"
 #"nt 0.0 -0.0) #(struct:point -3.788861141556923 6.562499999999998) \""
 #"green\"))) #(struct:translate 4.788861141556923 0 #(struct:translate"
 #" 0.0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:po"
 #"int 3.788861141556919 6.562500000000001) \"green\"))))))))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400"
 #" 0) #(struct:point 400 400) #(struct:point 0 400)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 477.4328266949301 460.6770"
 #"833333333 #(struct:overlay #(struct:translate 2.442173305069888 0 #("
 #"struct:translate 17/8 17/8 #(stru"
 #"ct:ellipse 17/4 17/4 0 255 \"green\"))) #(struct:translate 0 17/4 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 2.935542078280028 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:translate 1.226869322027955 0.0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 -1.226869322027955 -0.0 0 0) #(struct:pulled-point 0 "
 #"0 -1.226869322027955 1.4166666666666667 0 0) #(struct:pulled-point 0"
 #" 0 0.0 0.7083333333333337 0 0)) 255 \"red\"))) #(struct:translate 1."
 #"226869322027955 0.0 #(struct:overlay #(struct:translate 0 0.30357142"
 #"85714286 #(struct:translate 17/42 17/42 #(struct:ellipse 17/21 17/21"
 #" 0 255 \"red\"))) #(struct:translate 17/21 0 #(struct:translate -0.0"
 #" 1.4166666666666667 #(struct:polygon (#(struct:pulled-point 0 0 1.22"
 #"6869322027955 0.0 0 0) #(struct:pulled-point 0 0 1.226869322027955 -"
 #"1.4166666666666667 0 0) #(struct:pulled-point 0 0 0.0 -0.70833333333"
 #"33337 0 0)) 255 \"red\"))))))) #(struct:translate 0 1.41666666666666"
 #"67 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0.17708333333333437 #(struct:translate 3.06717330506988"
 #"93 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct:point"
 #" -3.0671733050698893 5.312499999999998) \"green\"))) #(struct:transl"
 #"ate 4.06717330506989 0 #(struct:translate 0 0 #(struct:line-segment "
 #"#(struct:point 0 0) #(struct:point 0 17/3) \"green\"))))) #(struct:t"
 #"ranslate 5.06717330506989 0.17708333333333348 #(struct:translate 0.0"
 #" 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point "
 #"3.067173305069886 5.3125) \"green\"))))))) #(struct:translate 0.5 8."
 #"083333333333334 #(struct:overlay #(struct:translate 0 8.881784197001"
 #"252e-016 #(struct:translate 3.0671733050698893 0.0 #(struct:line-seg"
 #"ment #(struct:point 0.0 -0.0) #(struct:point -3.0671733050698893 5.3"
 #"12499999999998) \"green\"))) #(struct:translate 4.06717330506989 0 #"
 #"(struct:translate 0.0 0.0 #(struct:line-segment #(struct:point -0.0 "
 #"-0.0) #(struct:point 3.067173305069886 5.3125) \"green\"))))))))) #("
 #"struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poi"
 #"nt 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 545.9740925722954 55"
 #"0.1458333333334 #(struct:overlay #(struct:translate 2.27590742770461"
 #"3 0 #(struct:translate 7/4 7/4 #(struct:ellipse 7/2 7/2 0 255 \"cyan"
 #"\"))) #(struct:translate 0 7/2 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 2.682211123289435 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 1.0103629710818451"
 #" 0.0 #(struct:polygon (#(struct:pulled-point 0 0 -1.0103629710818451"
 #" -0.0 0 0) #(struct:pulled-point 0 0 -1.0103629710818451 1.166666666"
 #"6666667 0 0) #(struct:pulled-point 0 0 0.0 0.5833333333333336 0 0)) "
 #"255 \"green\"))) #(struct:translate 1.0103629710818451 0.0 #(struct:"
 #"overlay #(struct:translate 0 0.25000000000000006 #(struct:translate "
 #"1/3 1/3 #(struct:ellipse 2/3 2/3 0 255 \"green\"))) #(struct:transla"
 #"te 2/3 0 #(struct:translate -0.0 1.1666666666666667 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 1.0103629710818451 0.0 0 0) #(struct:pul"
 #"led-point 0 0 1.0103629710818451 -1.1666666666666667 0 0) #(struct:p"
 #"ulled-point 0 0 0.0 -0.5833333333333336 0 0)) 255 \"green\"))))))) #"
 #"(struct:translate 0 1.1666666666666667 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0.14583333333333437"
 #" #(struct:translate 2.525907427704615 0.0 #(struct:line-segment #(st"
 #"ruct:point 0.0 -0.0) #(struct:point -2.525907427704615 4.37499999999"
 #"9998) \"cyan\"))) #(struct:translate 3.525907427704615 0 #(struct:tr"
 #"anslate 0 0 #(struct:line-segment #(struct:point 0 0) #(struct:point"
 #" 0 14/3) \"cyan\"))))) #(struct:translate 4.525907427704615 0.145833"
 #"33333333348 #(struct:translate 0.0 0.0 #(struct:line-segment #(struc"
 #"t:point -0.0 -0.0) #(struct:point 2.5259074277046123 4.375) \"cyan\""
 #"))))))) #(struct:translate 0.49999999999999956 6.833333333333334 #(s"
 #"truct:overlay #(struct:translate 0 8.881784197001252e-016 #(struct:t"
 #"ranslate 2.525907427704615 0.0 #(struct:line-segment #(struct:point "
 #"0.0 -0.0) #(struct:point -2.525907427704615 4.374999999999998) \"cya"
 #"n\"))) #(struct:translate 3.525907427704615 0 #(struct:translate 0.0"
 #" 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point "
 #"2.5259074277046123 4.375) \"cyan\"))))))))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:poi"
 #"nt 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 576.5153584496607 612.6145833333334 #(stru"
 #"ct:overlay #(struct:translate 2.1096415503393393 0 #(struct:translat"
 #"e 11/8 11/8 #(struct:ellipse 11/4 11/4 0 255 \"red\"))) #(struct:tra"
 #"nslate 0 11/4 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 2.428880168298842 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 0.7938566201357354 0.0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 -0.7938566201357354 -0.0 0 0) #(stru"
 #"ct:pulled-point 0 0 -0.7938566201357354 0.9166666666666666 0 0) #(st"
 #"ruct:pulled-point 0 0 0.0 0.45833333333333354 0 0)) 255 \"yellow\"))"
 #") #(struct:translate 0.7938566201357354 0.0 #(struct:overlay #(struc"
 #"t:translate 0 0.1964285714285714 #(struct:translate 11/42 11/42 #(st"
 #"ruct:ellipse 11/21 11/21 0 255 \"yellow\"))) #(struct:translate 11/2"
 #"1 0 #(struct:translate -0.0 0.9166666666666666 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0.7938566201357354 0.0 0 0) #(struct:pulled-p"
 #"oint 0 0 0.7938566201357354 -0.9166666666666666 0 0) #(struct:pulled"
 #"-point 0 0 0.0 -0.45833333333333354 0 0)) 255 \"yellow\"))))))) #(st"
 #"ruct:translate 0 0.9166666666666666 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0.11458333333333437 #("
 #"struct:translate 1.9846415503393402 0.0 #(struct:line-segment #(stru"
 #"ct:point 0.0 -0.0) #(struct:point -1.9846415503393402 3.437499999999"
 #"9987) \"red\"))) #(struct:translate 2.98464155033934 0 #(struct:tran"
 #"slate 0 0 #(struct:line-segment #(struct:point 0 0) #(struct:point 0"
 #" 11/3) \"red\"))))) #(struct:translate 3.98464155033934 0.1145833333"
 #"3333348 #(struct:translate 0.0 0.0 #(struct:line-segment #(struct:po"
 #"int -0.0 -0.0) #(struct:point 1.9846415503393382 3.4375) \"red\"))))"
 #"))) #(struct:translate 0.5 5.583333333333334 #(struct:overlay #(stru"
 #"ct:translate 0 8.881784197001252e-016 #(struct:translate 1.984641550"
 #"3393402 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct:"
 #"point -1.9846415503393402 3.4374999999999987) \"red\"))) #(struct:tr"
 #"anslate 2.98464155033934 0 #(struct:translate 0.0 0.0 #(struct:line-"
 #"segment #(struct:point -0.0 -0.0) #(struct:point 1.9846415503393382 "
 #"3.4375) \"red\"))))))))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 400 0) #(struct:point 400 400) #(struc"
 #"t:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 617.8762023679042 621.59375 #(struct:overlay #(struct:transla"
 #"te 1.9987976320958225 0 #(struct:translate 9/8 9/8 #(struct:ellipse "
 #"9/4 9/4 0 255 \"yellow\"))) #(struct:translate 0 9/4 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 2.25999"
 #"2864971779 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0.649519052838329 0.0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 -0.649519052838329 -0.0 0 0) #(struct:pulled-point 0 0 -0.64951905"
 #"2838329 0.75 0 0) #(struct:pulled-point 0 0 0.0 0.37500000000000017 "
 #"0 0)) 255 \"blue\"))) #(struct:translate 0.649519052838329 0.0 #(str"
 #"uct:overlay #(struct:translate 0 0.16071428571428573 #(struct:transl"
 #"ate 3/14 3/14 #(struct:ellipse 3/7 3/7 0 255 \"blue\"))) #(struct:tr"
 #"anslate 3/7 0 #(struct:translate -0.0 0.75 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0.649519052838329 0.0 0 0) #(struct:pulled-point "
 #"0 0 0.649519052838329 -0.75 0 0) #(struct:pulled-point 0 0 0.0 -0.37"
 #"500000000000017 0 0)) 255 \"blue\"))))))) #(struct:translate 0 0.75 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0.09375000000000067 #(struct:translate 1.6237976320958236 "
 #"0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct:point -1"
 #".6237976320958236 2.8124999999999987) \"yellow\"))) #(struct:transla"
 #"te 2.6237976320958234 0 #(struct:translate 0 0 #(struct:line-segment"
 #" #(struct:point 0 0) #(struct:point 0 3) \"yellow\"))))) #(struct:tr"
 #"anslate 3.6237976320958234 0.09375 #(struct:translate 0.0 0.0 #(stru"
 #"ct:line-segment #(struct:point -0.0 -0.0) #(struct:point 1.623797632"
 #"095822 2.8125) \"yellow\"))))))) #(struct:translate 0.5 4.75 #(struc"
 #"t:overlay #(struct:translate 0 6.661338147750939e-016 #(struct:trans"
 #"late 1.6237976320958236 0.0 #(struct:line-segment #(struct:point 0.0"
 #" -0.0) #(struct:point -1.6237976320958236 2.8124999999999987) \"yell"
 #"ow\"))) #(struct:translate 2.6237976320958234 0 #(struct:translate 0"
 #".0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:poin"
 #"t 1.623797632095822 2.8125) \"yellow\"))))))))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct"
 #":point 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"400 0 0 0) #(struct:pulled-point 0 0 400 400 0 0) #(struct:pulled-po"
 #"int 0 0 0 400 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 "
 #"0 0 0) #(struct:pulled-point 0 0 400 400 0 0) #(struct:pulled-point "
 #"0 0 0 400 0 0)) 255 \"white\")))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))) #(struct:bb 400 400 400.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 6           4 17 11550
(37
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 400) #(struct:point 0 400)) #(struct:translate 0 -0.2820323"
 #"027550984 #(struct:overlay #(struct:translate 4.0 0 #(struct:overlay"
 #" #(struct:translate 40.0 0 #30=#(struct:overlay #(struct:translate 2"
 #"0.0 0 #29=#(struct:overlay #(struct:translate 10.0 0 #28=#(struct:ov"
 #"erlay #(struct:translate 5.0 0 #27=#(struct:translate -0.0 8.6602540"
 #"37844387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.0000000000"
 #"00002 -8.660254037844387 0 0)) outline \"cyan\"))) #(struct:translat"
 #"e 0 8.660254037844387 #(struct:overlay #(struct:translate 0 0 #27#) "
 #"#(struct:translate 10.0 0.0 #27#))))) #(struct:translate 0 17.320508"
 #"075688775 #(struct:overlay #(struct:translate 0 0 #28#) #(struct:tra"
 #"nslate 20.0 0.0 #28#))))) #(struct:translate 0 34.64101615137755 #(s"
 #"truct:overlay #(struct:translate 0 0 #29#) #(struct:translate 40.0 0"
 #".0 #29#))))) #(struct:translate 0 69.2820323027551 #(struct:overlay "
 #"#(struct:translate 0 0 #30#) #(struct:translate 80.0 0.0 #30#))))) #"
 #"(struct:translate 0 0.2820323027550984 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 400 0) #(struct:point 400 400) #(struct:point 0"
 #" 400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 99"
 #".0 4.717967697244902 #(struct:overlay #(struct:translate 40.0 0 #26="
 #"#(struct:overlay #(struct:translate 20.0 0 #25=#(struct:overlay #(st"
 #"ruct:translate 10.0 0 #24=#(struct:overlay #(struct:translate 5.0 0 "
 #"#23=#(struct:translate -0.0 8.660254037844387 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #"
 #"(struct:pulled-point 0 0 5.000000000000002 -8.660254037844387 0 0)) "
 #"outline \"green\"))) #(struct:translate 0 8.660254037844387 #(struct"
 #":overlay #(struct:translate 0 0 #23#) #(struct:translate 10.0 0.0 #2"
 #"3#))))) #(struct:translate 0 17.320508075688775 #(struct:overlay #(s"
 #"truct:translate 0 0 #24#) #(struct:translate 20.0 0.0 #24#))))) #(st"
 #"ruct:translate 0 34.64101615137755 #(struct:overlay #(struct:transla"
 #"te 0 0 #25#) #(struct:translate 40.0 0.0 #25#))))) #(struct:translat"
 #"e 0 69.2820323027551 #(struct:overlay #(struct:translate 0 0 #26#) #"
 #"(struct:translate 80.0 0.0 #26#))))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 "
 #"400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 102.0 17.7179676972449 #(struct:overlay #(struct:"
 #"translate 40.0 0 #22=#(struct:overlay #(struct:translate 20.0 0 #21="
 #"#(struct:overlay #(struct:translate 10.0 0 #20=#(struct:overlay #(st"
 #"ruct:translate 5.0 0 #19=#(struct:translate -0.0 8.660254037844387 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.000000000000002 -8.6"
 #"60254037844387 0 0)) outline \"green\"))) #(struct:translate 0 8.660"
 #"254037844387 #(struct:overlay #(struct:translate 0 0 #19#) #(struct:"
 #"translate 10.0 0.0 #19#))))) #(struct:translate 0 17.320508075688775"
 #" #(struct:overlay #(struct:translate 0 0 #20#) #(struct:translate 20"
 #".0 0.0 #20#))))) #(struct:translate 0 34.64101615137755 #(struct:ove"
 #"rlay #(struct:translate 0 0 #21#) #(struct:translate 40.0 0.0 #21#))"
 #"))) #(struct:translate 0 69.2820323027551 #(struct:overlay #(struct:"
 #"translate 0 0 #22#) #(struct:translate 80.0 0.0 #22#))))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0"
 #") #(struct:point 400 400) #(struct:point 0 400)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 174.0 128.35898384862244 #(s"
 #"truct:overlay #(struct:translate 20.0 0 #18=#(struct:overlay #(struc"
 #"t:translate 10.0 0 #17=#(struct:overlay #(struct:translate 5.0 0 #16"
 #"=#(struct:translate -0.0 8.660254037844387 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(st"
 #"ruct:pulled-point 0 0 5.000000000000002 -8.660254037844387 0 0)) out"
 #"line \"yellow\"))) #(struct:translate 0 8.660254037844387 #(struct:o"
 #"verlay #(struct:translate 0 0 #16#) #(struct:translate 10.0 0.0 #16#"
 #"))))) #(struct:translate 0 17.320508075688775 #(struct:overlay #(str"
 #"uct:translate 0 0 #17#) #(struct:translate 20.0 0.0 #17#))))) #(stru"
 #"ct:translate 0 34.64101615137755 #(struct:overlay #(struct:translate"
 #" 0 0 #18#) #(struct:translate 40.0 0.0 #18#))))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struc"
 #"t:point 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 257.0 142.35898384862244 #(struct:ove"
 #"rlay #(struct:translate 20.0 0 #15=#(struct:overlay #(struct:transla"
 #"te 10.0 0 #14=#(struct:overlay #(struct:translate 5.0 0 #13=#(struct"
 #":translate -0.0 8.660254037844387 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pull"
 #"ed-point 0 0 5.000000000000002 -8.660254037844387 0 0)) outline \"ye"
 #"llow\"))) #(struct:translate 0 8.660254037844387 #(struct:overlay #("
 #"struct:translate 0 0 #13#) #(struct:translate 10.0 0.0 #13#))))) #(s"
 #"truct:translate 0 17.320508075688775 #(struct:overlay #(struct:trans"
 #"late 0 0 #14#) #(struct:translate 20.0 0.0 #14#))))) #(struct:transl"
 #"ate 0 34.64101615137755 #(struct:overlay #(struct:translate 0 0 #15#"
 #") #(struct:translate 40.0 0.0 #15#))))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 4"
 #"00 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 324.0 180.35898384862244 #(struct:overlay #(st"
 #"ruct:translate 20.0 0 #12=#(struct:overlay #(struct:translate 10.0 0"
 #" #11=#(struct:overlay #(struct:translate 5.0 0 #10=#(struct:translat"
 #"e -0.0 8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point "
 #"0 0 5.000000000000002 -8.660254037844387 0 0)) outline \"cyan\"))) #"
 #"(struct:translate 0 8.660254037844387 #(struct:overlay #(struct:tran"
 #"slate 0 0 #10#) #(struct:translate 10.0 0.0 #10#))))) #(struct:trans"
 #"late 0 17.320508075688775 #(struct:overlay #(struct:translate 0 0 #1"
 #"1#) #(struct:translate 20.0 0.0 #11#))))) #(struct:translate 0 34.64"
 #"101615137755 #(struct:overlay #(struct:translate 0 0 #12#) #(struct:"
 #"translate 40.0 0.0 #12#))))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 400) #(s"
 #"truct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 377.0 247.67949192431124 #(struct:overlay #(struct:transl"
 #"ate 10.0 0 #9=#(struct:overlay #(struct:translate 5.0 0 #8=#(struct:"
 #"translate -0.0 8.660254037844387 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulle"
 #"d-point 0 0 5.000000000000002 -8.660254037844387 0 0)) outline \"cya"
 #"n\"))) #(struct:translate 0 8.660254037844387 #(struct:overlay #(str"
 #"uct:translate 0 0 #8#) #(struct:translate 10.0 0.0 #8#))))) #(struct"
 #":translate 0 17.320508075688775 #(struct:overlay #(struct:translate "
 #"0 0 #9#) #(struct:translate 20.0 0.0 #9#))))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 408.0 317.6794919243112 #(struct:overlay"
 #" #(struct:translate 10.0 0 #7=#(struct:overlay #(struct:translate 5."
 #"0 0 #6=#(struct:translate -0.0 8.660254037844387 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0"
 #") #(struct:pulled-point 0 0 5.000000000000002 -8.660254037844387 0 0"
 #")) outline \"red\"))) #(struct:translate 0 8.660254037844387 #(struc"
 #"t:overlay #(struct:translate 0 0 #6#) #(struct:translate 10.0 0.0 #6"
 #"#))))) #(struct:translate 0 17.320508075688775 #(struct:overlay #(st"
 #"ruct:translate 0 0 #7#) #(struct:translate 20.0 0.0 #7#))))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 40"
 #"0 0) #(struct:point 400 400) #(struct:point 0 400)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 501.0 325.6794919243112 #"
 #"(struct:overlay #(struct:translate 10.0 0 #5=#(struct:overlay #(stru"
 #"ct:translate 5.0 0 #4=#(struct:translate -0.0 8.660254037844387 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.000000000000002 -8.6602"
 #"54037844387 0 0)) outline \"blue\"))) #(struct:translate 0 8.6602540"
 #"37844387 #(struct:overlay #(struct:translate 0 0 #4#) #(struct:trans"
 #"late 10.0 0.0 #4#))))) #(struct:translate 0 17.320508075688775 #(str"
 #"uct:overlay #(struct:translate 0 0 #5#) #(struct:translate 20.0 0.0 "
 #"#5#))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 400 0) #(struct:point 400 400) #(struct:point 0 400)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 581.0 391"
 #".33974596215563 #(struct:overlay #(struct:translate 5.0 0 #3=#(struc"
 #"t:translate -0.0 8.660254037844387 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pul"
 #"led-point 0 0 5.000000000000002 -8.660254037844387 0 0)) outline \"y"
 #"ellow\"))) #(struct:translate 0 8.660254037844387 #(struct:overlay #"
 #"(struct:translate 0 0 #3#) #(struct:translate 10.0 0.0 #3#))))) #(st"
 #"ruct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point"
 #" 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 588.0 482.339745962155"
 #"63 #(struct:overlay #(struct:translate 5.0 0 #2=#(struct:translate -"
 #"0.0 8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0"
 #" 5.000000000000002 -8.660254037844387 0 0)) outline \"blue\"))) #(st"
 #"ruct:translate 0 8.660254037844387 #(struct:overlay #(struct:transla"
 #"te 0 0 #2#) #(struct:translate 10.0 0.0 #2#))))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struc"
 #"t:point 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 661.0 522.3397459621556 #(struct:over"
 #"lay #(struct:translate 5.0 0 #1=#(struct:translate -0.0 8.6602540378"
 #"44387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.0000000000000"
 #"02 -8.660254037844387 0 0)) outline \"green\"))) #(struct:translate "
 #"0 8.660254037844387 #(struct:overlay #(struct:translate 0 0 #1#) #(s"
 #"truct:translate 10.0 0.0 #1#))))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 400"
 #") #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 694.0 527.3397459621556 #(struct:overlay #(struct:tr"
 #"anslate 5.0 0 #0=#(struct:translate -0.0 8.660254037844387 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 10 0 0 0) #(struct:pulled-point 0 0 5.000000000000002 -8.660254037"
 #"844387 0 0)) outline \"cyan\"))) #(struct:translate 0 8.660254037844"
 #"387 #(struct:overlay #(struct:translate 0 0 #0#) #(struct:translate "
 #"10.0 0.0 #0#))))) #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 400 0) #(struct:point 400 400) #(struct:point"
 #" 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 400 400 0 0) #(struct:pulled-point 0 0 0 400 0 0)) outline #("
 #"struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(struct:pulled-point 0"
 #" 0 400 400 0 0) #(struct:pulled-point 0 0 0 400 0 0)) 255 \"white\")"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))) #(struct:b"
 #"b 400 400 400.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"desenha-figuras"
0 0 24 3 1 #" "
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"CENA"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"RNDPOSX"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"RNDPOSY"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"RNDCOLOR"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"NEWHEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.8"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"NEWFIGURA"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 14 3 7 #"RNDPOSX"
0 0 24 3 1 #" "
0 0 14 3 7 #"RNDPOSY"
0 0 24 3 1 #" "
0 0 14 3 9 #"NEWHEIGHT"
0 0 24 3 1 #" "
0 0 14 3 8 #"RNDCOLOR"
0 0 24 3 3 #") )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 82
(38
 #";; Se altura da figura for muito pequena (<=10), coloca \303\272ltim"
 #"a figura (original)."
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 14 3 7 #"RNDPOSX"
0 0 24 3 1 #" "
0 0 14 3 7 #"RNDPOSY"
0 0 24 3 1 #" "
0 0 14 3 4 #"CENA"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 75
(39
 #";; Se n\303\243o, varia a altura, a posi\303\247\303\243o e a cor e "
 #"adiciona a figura na cena"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 14 3 7 #"RNDPOSX"
0 0 24 3 1 #" "
0 0 14 3 7 #"RNDPOSY"
0 0 24 3 2 #" ("
0 0 14 3 15 #"desenha-figuras"
0 0 24 3 1 #" "
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 9 #"NEWFIGURA"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 124
(40
 #";; Termina\303\247\303\243o a fun\303\247\303\243"
 #"o desenha-figuras: a cada chamada recursiva, a figura ter\303\241 su"
 #"a altura diminu\303\255da pela metade, at\303\251"
) 0 0 24 29 1 #"\n"
0 0 17 3 102
(41
 #";; que em algum momento ser\303\241 "
 #"pequena demais (<=10) e levar\303\241 ao caso trivial, que encerra a"
 #" fun\303\247\303\243o."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"desenha-figuras"
0 0 24 3 1 #" "
0 0 14 3 14 #"desenha-boneco"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"desenha-figuras"
0 0 24 3 1 #" "
0 0 14 3 18 #"desenha-sierpinski"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77 15 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; 5: Fun\303\247\303\243o desenha-figuras-gen"
0 0 24 29 1 #"\n"
0 0 17 3 77 15 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55
(42
 #";; (a) Crit\303\251rios de fim "
 #"e fun\303\247\303\265es de movimenta\303\247\303\243o:"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Crit\303\251rio de fim: Cor \303\251 vermelha"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; \303\251-vermelho? : Figura -> Booleano"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; Obj: dada uma figura, retorna se \303\251 vermelha."
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; Exemplos: (\303\251-vermelho? Figura1) = true"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;           (\303\251-vermelho? Figura2) = false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"\303\251-vermelho?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #" ("
0 0 14 3 8 #"gera-cor"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"\303\251-vermelho?"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura1"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"\303\251-vermelho?"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; Crit\303\251rio de fim: Cor \303\251 >7?"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; cor>7? : Figura -> Booleano"
0 0 24 29 1 #"\n"
0 0 17 3 67
(43
 #";; Obj: dada uma figura, retorna se o c\303\263digo da cor \303\251 "
 #"maior que 7"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Exemplos: (cor>7? Figura1) = true"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;           (cor>7? Figura2) = false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cor>7?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cor>7?"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura1"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"cor>7?"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura2"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 48
(44
 #";; Crit\303\251rio de fim: Pos"
 #"i\303\247\303\243o X \303\251 menor que 20"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";;x-menor? : Figura -> Booleano"
0 0 24 29 1 #"\n"
0 0 17 3 64
(45
 #";;Obj: dada uma figura, r"
 #"etorna se a posi\303\247\303\243o X \303\251 menor que 20"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";;Exemplos: (x-menor? (make-figura 19 20 20 0)) = true"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;          (x-menor? (make-figura 25 50 22 2)) = false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"x-menor?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"x-menor?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"x-menor?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 48
(46
 #";; Crit\303\251rio de fim: Pos"
 #"i\303\247\303\243o Y \303\251 maior que 80"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";;y-maior? : Figura -> Booleano"
0 0 24 29 1 #"\n"
0 0 17 3 64
(47
 #";;Obj: dada uma figura, r"
 #"etorna se a posi\303\247\303\243o Y \303\251 maior que 80"
) 0 0 24 29 1 #"\n"
0 0 17 3 55 #";;Exemplos: (y-maior? (make-figura 19 20 20 0)) = false"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;          (y-maior? (make-figura 25 81 22 2)) = true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"y-maior?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 2 #"80"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"y-maior?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"y-maior?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"81"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Crit\303\251rio de fim: Fora das bordas da cena"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;out-of-borders? : Figura -> Booleano"
0 0 24 29 1 #"\n"
0 0 17 3 68
(48
 #";;Obj: dada uma figura, retorna se ela est\303\241 fora das bordas d"
 #"a cena"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";;Exemplos: (out-of-borders? (make-figura 19 20 20 0)) = false"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;          (out-of-borders? (make-figura 401 81 22 2)) = true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"out-of-borders?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 3 #"400"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 3 #"400"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"out-of-borders?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"399"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"out-of-borders?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"out-of-borders?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 54
#";; Crit\303\251rio de fim: Altura \303\251 menor que 20 (pequena?)"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;pequena? : Figura -> Booleano"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;Obj: dada uma figura, retorna se a altura \303\251 menor que 20"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;Exemplos: (pequena? (make-figura 19 20 25 0)) = false"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;          (pequena? (make-figura 25 81 19 2)) = true"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"pequena?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"pequena?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"pequena?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"81"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 54
#";; Crit\303\251rio de fim: Altura \303\251 maior que 250 (grande?)"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;grande? : Figura -> Booleano"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";;Obj: dada uma figura, retorna se a altura \303\251 maior que 250"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";;Exemplos: (grande? (make-figura 19 20 250 0)) = true"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;          (grande? (make-figura 25 81 190 2)) = false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"grande?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 3 #"250"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"grande?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"251"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"grande?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"81"
0 0 24 3 1 #" "
0 0 21 3 3 #"190"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 43
#";; Fun\303\247\303\243o de Movimenta\303\247\303\243o: Altera a cor"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;muda-cor: Figura -> Figura"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Obj: dada uma figura, altera a cor da mesma"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"muda-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-figura"
0 0 24 3 2 #" ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #") ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 68
(49
 #";; Fun\303\247\303\243o de Movimenta\303"
 #"\247\303\243o: Altera a posi\303\247"
 #"\303\243o de modo aleat\303\263rio"
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";;move-dir-random: Figura -> Figura"
0 0 24 29 1 #"\n"
0 0 17 3 71
(50
 #";; Obj: dada uma figura, altera a posi\303\247\303\243o da mesma de "
 #"modo aleat\303\263rio"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"move-dir-random"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-figura"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 49
(51
 #";; Fun\303\247\303\243o de Movimenta"
 #"\303\247\303\243o: Altera a posi\303\247\303\243o"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";;move-dir: Figura -> Figura"
0 0 24 29 1 #"\n"
0 0 17 3 77
(52
 #";; Obj: dada uma figura, altera a posi\303\247\303\243o da mesma em "
 #"20 pontos e a sua cor"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"move-dir"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-figura"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #" ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #" ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 47
(53
 #";; Fun\303\247\303\243o de Moviment"
 #"a\303\247\303\243o: Aumenta a altura"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";; aumenta-alt: Figura -> Figura"
0 0 24 29 1 #"\n"
0 0 17 3 101
(54
 #";; Obj: dada uma figura, aumenta a altura em 20% do valor anterior. "
 #"Cor e posi\303\247\303\265es tamb\303\251m mudar\303\243o"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aumenta-alt"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-figura"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.2"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 47
(55
 #";; Fun\303\247\303\243o de Moviment"
 #"a\303\247\303\243o: Diminui a altura"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";; diminui-alt: Figura -> Figura"
0 0 24 29 1 #"\n"
0 0 17 3 101
(56
 #";; Obj: dada uma figura, diminui a altura em 80% do valor anterior. "
 #"Cor e posi\303\247\303\265es tamb\303\251m mudar\303\243o"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"diminui-alt"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-figura"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.8"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 64
(57
 #";; Fun\303\247\303\243o de Movimenta\303"
 #"\247\303\243o: Muda todos os atributos da figura"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";;muda-figura: Figura -> Figura"
0 0 24 29 1 #"\n"
0 0 17 3 54
#";; Obj: Dada uma figura, muda posi\303\247\303\243o, altura e cor."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"muda-figura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"make-figura"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.8"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"beside"
0 0 24 3 2 #" ("
0 0 14 3 14 #"desenha-boneco"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"desenha-boneco"
0 0 24 3 2 #" ("
0 0 14 3 11 #"muda-figura"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; (b) fun\303\247\303\243o desenha-figuras-gen:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; FUN\303\207\303\203O DESENHA-BOLA:"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; desenha-bola : Figura -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; Obj.: Dada uma figura, desenha uma bola."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 17 3 1 #"("
0 0 17 3 12 #"desenha-bola"
0 0 17 3 1 #" "
0 0 17 3 11 #"Figura1) = "
0 6           4 17 99
(58
 #"(#(struct:translate 125/2 125/2 #(struct:ellipse 125 125 0 255 \"red"
 #"\")) #(struct:bb 125 125 125) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 17 3 1 #"("
0 0 17 3 12 #"desenha-bola"
0 0 17 3 1 #" "
0 0 17 3 11 #"Figura2) = "
0 6           4 17 89
(59
 #"(#(struct:translate 30 30 #(struct:ellipse 60 60 0 255 \"cyan\")) #("
 #"struct:bb 60 60 60) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"desenha-bola"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 13 #"figura-altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 8 #"gera-cor"
0 0 24 3 2 #" ("
0 0 14 3 10 #"figura-cor"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 5 #")) ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Testes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"desenha-bola"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"desenha-bola"
0 0 24 3 1 #" "
0 0 14 3 7 #"Figura2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; FUN\303\207\303\203O DESENHA-FIGURAS-GEN:"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 94
(60
 #";; desenha-figuras-gen : (Figura->Imagem) Figura (Figura->Booleano) "
 #"(Figura->Figura) -> Imagem"
) 0 0 24 29 1 #"\n"
0 0 17 3 58
(61
 #";; Obj.: Dados uma fun\303\247\303\243o de desenhar figura, uma figu"
 #"ra"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";; inicial"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 2 #"um"
0 0 17 3 1 #" "
0 0 17 3 9 #"crit\303\251rio"
0 0 17 3 1 #" "
0 0 17 3 83
(62
 #"de fim e uma fun\303\247\303\243o de "
 #"altera\303\247\303\243o de figuras, gera uma cena com v\303\241rias "
 #"figuras."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"desenha-figuras-gen"
0 0 24 3 1 #" "
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 1 #" "
0 0 14 3 8 #"criterio"
0 0 24 3 1 #" "
0 0 14 3 9 #"alteracao"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"CENA"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"RNDPOSX"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"RNDPOSY"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 57
#";; Se [criterio] ent\303\243o desenha a figura original na cena"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"criterio"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 14 3 4 #"CENA"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 54
(63
 #";; Se n\303\243o, desenha a figu"
 #"ra na cena com a altera\303\247\303\243o"
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-x"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 8 #"figura-y"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 3 #") ("
0 0 14 3 19 #"desenha-figuras-gen"
0 0 24 3 1 #" "
0 0 14 3 4 #"func"
0 0 24 3 2 #" ("
0 0 14 3 9 #"alteracao"
0 0 24 3 1 #" "
0 0 14 3 3 #"fig"
0 0 24 3 2 #") "
0 0 14 3 8 #"criterio"
0 0 24 3 1 #" "
0 0 14 3 9 #"alteracao"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ) "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Chamada 1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 19 #"desenha-figuras-gen"
0 0 24 3 1 #" "
0 0 14 3 18 #"desenha-sierpinski"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 8 #"pequena?"
0 0 24 3 1 #" "
0 0 14 3 11 #"diminui-alt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 6           4 17 8628
(64
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 400) #(struct:point 0 400)) #(struct:translate 0 -29.282032"
 #"3027551 #(struct:overlay #(struct:translate 20.0 0 #(struct:overlay "
 #"#(struct:translate 40.0 0 #23=#(struct:overlay #(struct:translate 20"
 #".0 0 #22=#(struct:overlay #(struct:translate 10.0 0 #21=#(struct:ove"
 #"rlay #(struct:translate 5.0 0 #20=#(struct:translate -0.0 8.66025403"
 #"7844387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.00000000000"
 #"0002 -8.660254037844387 0 0)) outline \"blue\"))) #(struct:translate"
 #" 0 8.660254037844387 #(struct:overlay #(struct:translate 0 0 #20#) #"
 #"(struct:translate 10.0 0.0 #20#))))) #(struct:translate 0 17.3205080"
 #"75688775 #(struct:overlay #(struct:translate 0 0 #21#) #(struct:tran"
 #"slate 20.0 0.0 #21#))))) #(struct:translate 0 34.64101615137755 #(st"
 #"ruct:overlay #(struct:translate 0 0 #22#) #(struct:translate 40.0 0."
 #"0 #22#))))) #(struct:translate 0 69.2820323027551 #(struct:overlay #"
 #"(struct:translate 0 0 #23#) #(struct:translate 80.0 0.0 #23#))))) #("
 #"struct:translate 0 29.2820323027551 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 400 0) #(struct:point 400 400) #(struct:point 0 40"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 43.0 "
 #"68.7179676972449 #(struct:overlay #(struct:translate 40.0 0 #19=#(st"
 #"ruct:overlay #(struct:translate 20.0 0 #18=#(struct:overlay #(struct"
 #":translate 10.0 0 #17=#(struct:overlay #(struct:translate 5.0 0 #16="
 #"#(struct:translate -0.0 8.660254037844387 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(str"
 #"uct:pulled-point 0 0 5.000000000000002 -8.660254037844387 0 0)) outl"
 #"ine \"green\"))) #(struct:translate 0 8.660254037844387 #(struct:ove"
 #"rlay #(struct:translate 0 0 #16#) #(struct:translate 10.0 0.0 #16#))"
 #"))) #(struct:translate 0 17.320508075688775 #(struct:overlay #(struc"
 #"t:translate 0 0 #17#) #(struct:translate 20.0 0.0 #17#))))) #(struct"
 #":translate 0 34.64101615137755 #(struct:overlay #(struct:translate 0"
 #" 0 #18#) #(struct:translate 40.0 0.0 #18#))))) #(struct:translate 0 "
 #"69.2820323027551 #(struct:overlay #(struct:translate 0 0 #19#) #(str"
 #"uct:translate 80.0 0.0 #19#))))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 400)"
 #" #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 157.0 133.35898384862244 #(struct:overlay #(struct:tr"
 #"anslate 20.0 0 #15=#(struct:overlay #(struct:translate 10.0 0 #14=#("
 #"struct:overlay #(struct:translate 5.0 0 #13=#(struct:translate -0.0 "
 #"8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.0"
 #"00000000000002 -8.660254037844387 0 0)) outline \"yellow\"))) #(stru"
 #"ct:translate 0 8.660254037844387 #(struct:overlay #(struct:translate"
 #" 0 0 #13#) #(struct:translate 10.0 0.0 #13#))))) #(struct:translate "
 #"0 17.320508075688775 #(struct:overlay #(struct:translate 0 0 #14#) #"
 #"(struct:translate 20.0 0.0 #14#))))) #(struct:translate 0 34.6410161"
 #"5137755 #(struct:overlay #(struct:translate 0 0 #15#) #(struct:trans"
 #"late 40.0 0.0 #15#))))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 400 0) #(struct:point 400 400) #(struct"
 #":point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 206.0 153.35898384862244 #(struct:overlay #(struct:translate 2"
 #"0.0 0 #12=#(struct:overlay #(struct:translate 10.0 0 #11=#(struct:ov"
 #"erlay #(struct:translate 5.0 0 #10=#(struct:translate -0.0 8.6602540"
 #"37844387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.0000000000"
 #"00002 -8.660254037844387 0 0)) outline \"cyan\"))) #(struct:translat"
 #"e 0 8.660254037844387 #(struct:overlay #(struct:translate 0 0 #10#) "
 #"#(struct:translate 10.0 0.0 #10#))))) #(struct:translate 0 17.320508"
 #"075688775 #(struct:overlay #(struct:translate 0 0 #11#) #(struct:tra"
 #"nslate 20.0 0.0 #11#))))) #(struct:translate 0 34.64101615137755 #(s"
 #"truct:overlay #(struct:translate 0 0 #12#) #(struct:translate 40.0 0"
 #".0 #12#))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 400 0) #(struct:point 400 400) #(struct:point 0 40"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 266.0"
 #" 157.35898384862244 #(struct:overlay #(struct:translate 20.0 0 #9=#("
 #"struct:overlay #(struct:translate 10.0 0 #8=#(struct:overlay #(struc"
 #"t:translate 5.0 0 #7=#(struct:translate -0.0 8.660254037844387 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.000000000000002 -8.66025"
 #"4037844387 0 0)) outline \"red\"))) #(struct:translate 0 8.660254037"
 #"844387 #(struct:overlay #(struct:translate 0 0 #7#) #(struct:transla"
 #"te 10.0 0.0 #7#))))) #(struct:translate 0 17.320508075688775 #(struc"
 #"t:overlay #(struct:translate 0 0 #8#) #(struct:translate 20.0 0.0 #8"
 #"#))))) #(struct:translate 0 34.64101615137755 #(struct:overlay #(str"
 #"uct:translate 0 0 #9#) #(struct:translate 40.0 0.0 #9#))))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400"
 #" 0) #(struct:point 400 400) #(struct:point 0 400)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 329.0 261.6794919243112 #("
 #"struct:overlay #(struct:translate 10.0 0 #6=#(struct:overlay #(struc"
 #"t:translate 5.0 0 #5=#(struct:translate -0.0 8.660254037844387 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.000000000000002 -8.66025"
 #"4037844387 0 0)) outline \"blue\"))) #(struct:translate 0 8.66025403"
 #"7844387 #(struct:overlay #(struct:translate 0 0 #5#) #(struct:transl"
 #"ate 10.0 0.0 #5#))))) #(struct:translate 0 17.320508075688775 #(stru"
 #"ct:overlay #(struct:translate 0 0 #6#) #(struct:translate 20.0 0.0 #"
 #"6#))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 400 0) #(struct:point 400 400) #(struct:point 0 400)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 379.0 305."
 #"6794919243112 #(struct:overlay #(struct:translate 10.0 0 #4=#(struct"
 #":overlay #(struct:translate 5.0 0 #3=#(struct:translate -0.0 8.66025"
 #"4037844387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.00000000"
 #"0000002 -8.660254037844387 0 0)) outline \"green\"))) #(struct:trans"
 #"late 0 8.660254037844387 #(struct:overlay #(struct:translate 0 0 #3#"
 #") #(struct:translate 10.0 0.0 #3#))))) #(struct:translate 0 17.32050"
 #"8075688775 #(struct:overlay #(struct:translate 0 0 #4#) #(struct:tra"
 #"nslate 20.0 0.0 #4#))))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 400 0) #(struct:point 400 400) #(struc"
 #"t:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 442.0 340.6794919243112 #(struct:overlay #(struct:translate 1"
 #"0.0 0 #2=#(struct:overlay #(struct:translate 5.0 0 #1=#(struct:trans"
 #"late -0.0 8.660254037844387 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 5.000000000000002 -8.660254037844387 0 0)) outline \"yellow\""
 #"))) #(struct:translate 0 8.660254037844387 #(struct:overlay #(struct"
 #":translate 0 0 #1#) #(struct:translate 10.0 0.0 #1#))))) #(struct:tr"
 #"anslate 0 17.320508075688775 #(struct:overlay #(struct:translate 0 0"
 #" #2#) #(struct:translate 20.0 0.0 #2#))))) #(struct:translate 0 0 #("
 #"struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:poin"
 #"t 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 526.0 428.33974596215563 #(struct:overlay #"
 #"(struct:translate 5.0 0 #0=#(struct:translate -0.0 8.660254037844387"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.000000000000002 -8"
 #".660254037844387 0 0)) outline \"cyan\"))) #(struct:translate 0 8.66"
 #"0254037844387 #(struct:overlay #(struct:translate 0 0 #0#) #(struct:"
 #"translate 10.0 0.0 #0#))))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 400 0) #(struct:point 400 400) #(st"
 #"ruct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(struct:"
 #"pulled-point 0 0 400 400 0 0) #(struct:pulled-point 0 0 0 400 0 0)) "
 #"outline #(struct:pen \"black\" 2 solid round round)))) #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #(struct:pull"
 #"ed-point 0 0 400 400 0 0) #(struct:pulled-point 0 0 0 400 0 0)) 255 "
 #"\"white\")))))))))))))))))))))))))))))))))))))))))) #(struct:bb 400 "
 #"400 400.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Chamada 2"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 19 #"desenha-figuras-gen"
0 0 24 3 1 #" "
0 0 14 3 12 #"desenha-bola"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 15 #"out-of-borders?"
0 0 24 3 1 #" "
0 0 14 3 15 #"move-dir-random"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 6           4 17 3025
(65
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 75 15 #(struct:translate 25 25 #(struct:"
 #"ellipse 50 50 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 400 400) "
 #"#(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 103 64 #(struct:translate 25 25 #(struct:ellipse 50 50"
 #" 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 400 0) #(struct:point 400 400) #(struct:poin"
 #"t 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 107 155 #(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blu"
 #"e\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 400 0) #(struct:point 400 400) #(struct:point 0 400)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 127 196 #(s"
 #"truct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\"))) #(str"
 #"uct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"400 0) #(struct:point 400 400) #(struct:point 0 400)) #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 160 232 #(struct:transl"
 #"ate 25 25 #(struct:ellipse 50 50 0 255 \"blue\"))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(str"
 #"uct:point 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 211 252 #(struct:translate 25 25 #("
 #"struct:ellipse 50 50 0 255 \"blue\"))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 40"
 #"0 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 236 294 #(struct:translate 25 25 #(struct:ellip"
 #"se 50 50 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 400 0) #(struct:point 400 400) #(str"
 #"uct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 290 332 #(struct:translate 25 25 #(struct:ellipse 50 50 0 2"
 #"55 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 400 0) #(struct:point 400 400) #(struct:point 0 "
 #"400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 332"
 #" 422 #(struct:translate 25 25 #(struct:ellipse 50 50 0 255 \"blue\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 400 0 0 0) #(struct:pulled-point 0 0 400 400 "
 #"0 0) #(struct:pulled-point 0 0 0 400 0 0)) outline #(struct:pen \"bl"
 #"ack\" 2 solid round round)))) #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 400 0 0 0) #(struct:pulled-point 0 0 400 400 0 0)"
 #" #(struct:pulled-point 0 0 0 400 0 0)) 255 \"white\"))))))))))))))))"
 #")))))))))))))))))))))))))) #(struct:bb 400 400 400) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Chamada 3"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 19 #"desenha-figuras-gen"
0 0 24 3 1 #" "
0 0 14 3 18 #"desenha-sierpinski"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 6 #"cor>7?"
0 0 24 3 1 #" "
0 0 14 3 8 #"move-dir"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 6           4 17 9560
(66
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 400) #(struct:point 0 400)) #(struct:translate 0 -29.282032"
 #"3027551 #(struct:overlay #(struct:translate 20.0 0 #(struct:overlay "
 #"#(struct:translate 40.0 0 #31=#(struct:overlay #(struct:translate 20"
 #".0 0 #30=#(struct:overlay #(struct:translate 10.0 0 #29=#(struct:ove"
 #"rlay #(struct:translate 5.0 0 #28=#(struct:translate -0.0 8.66025403"
 #"7844387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.00000000000"
 #"0002 -8.660254037844387 0 0)) outline \"blue\"))) #(struct:translate"
 #" 0 8.660254037844387 #(struct:overlay #(struct:translate 0 0 #28#) #"
 #"(struct:translate 10.0 0.0 #28#))))) #(struct:translate 0 17.3205080"
 #"75688775 #(struct:overlay #(struct:translate 0 0 #29#) #(struct:tran"
 #"slate 20.0 0.0 #29#))))) #(struct:translate 0 34.64101615137755 #(st"
 #"ruct:overlay #(struct:translate 0 0 #30#) #(struct:translate 40.0 0."
 #"0 #30#))))) #(struct:translate 0 69.2820323027551 #(struct:overlay #"
 #"(struct:translate 0 0 #31#) #(struct:translate 80.0 0.0 #31#))))) #("
 #"struct:translate 0 29.2820323027551 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 400 0) #(struct:point 400 400) #(struct:point 0 40"
 #"0)) #(struct:translate 0 -9.282032302755098 #(struct:overlay #(struc"
 #"t:translate 40.0 0 #(struct:overlay #(struct:translate 40.0 0 #27=#("
 #"struct:overlay #(struct:translate 20.0 0 #26=#(struct:overlay #(stru"
 #"ct:translate 10.0 0 #25=#(struct:overlay #(struct:translate 5.0 0 #2"
 #"4=#(struct:translate -0.0 8.660254037844387 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(s"
 #"truct:pulled-point 0 0 5.000000000000002 -8.660254037844387 0 0)) ou"
 #"tline \"green\"))) #(struct:translate 0 8.660254037844387 #(struct:o"
 #"verlay #(struct:translate 0 0 #24#) #(struct:translate 10.0 0.0 #24#"
 #"))))) #(struct:translate 0 17.320508075688775 #(struct:overlay #(str"
 #"uct:translate 0 0 #25#) #(struct:translate 20.0 0.0 #25#))))) #(stru"
 #"ct:translate 0 34.64101615137755 #(struct:overlay #(struct:translate"
 #" 0 0 #26#) #(struct:translate 40.0 0.0 #26#))))) #(struct:translate "
 #"0 69.2820323027551 #(struct:overlay #(struct:translate 0 0 #27#) #(s"
 #"truct:translate 80.0 0.0 #27#))))) #(struct:translate 0 9.2820323027"
 #"55098 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(str"
 #"uct:point 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 60.0 10.717967697244902 #(struct:ov"
 #"erlay #(struct:translate 40.0 0 #23=#(struct:overlay #(struct:transl"
 #"ate 20.0 0 #22=#(struct:overlay #(struct:translate 10.0 0 #21=#(stru"
 #"ct:overlay #(struct:translate 5.0 0 #20=#(struct:translate -0.0 8.66"
 #"0254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.00000"
 #"0000000002 -8.660254037844387 0 0)) outline \"yellow\"))) #(struct:t"
 #"ranslate 0 8.660254037844387 #(struct:overlay #(struct:translate 0 0"
 #" #20#) #(struct:translate 10.0 0.0 #20#))))) #(struct:translate 0 17"
 #".320508075688775 #(struct:overlay #(struct:translate 0 0 #21#) #(str"
 #"uct:translate 20.0 0.0 #21#))))) #(struct:translate 0 34.64101615137"
 #"755 #(struct:overlay #(struct:translate 0 0 #22#) #(struct:translate"
 #" 40.0 0.0 #22#))))) #(struct:translate 0 69.2820323027551 #(struct:o"
 #"verlay #(struct:translate 0 0 #23#) #(struct:translate 80.0 0.0 #23#"
 #"))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 80.0 30.7179"
 #"676972449 #(struct:overlay #(struct:translate 40.0 0 #19=#(struct:ov"
 #"erlay #(struct:translate 20.0 0 #18=#(struct:overlay #(struct:transl"
 #"ate 10.0 0 #17=#(struct:overlay #(struct:translate 5.0 0 #16=#(struc"
 #"t:translate -0.0 8.660254037844387 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pul"
 #"led-point 0 0 5.000000000000002 -8.660254037844387 0 0)) outline \"c"
 #"yan\"))) #(struct:translate 0 8.660254037844387 #(struct:overlay #(s"
 #"truct:translate 0 0 #16#) #(struct:translate 10.0 0.0 #16#))))) #(st"
 #"ruct:translate 0 17.320508075688775 #(struct:overlay #(struct:transl"
 #"ate 0 0 #17#) #(struct:translate 20.0 0.0 #17#))))) #(struct:transla"
 #"te 0 34.64101615137755 #(struct:overlay #(struct:translate 0 0 #18#)"
 #" #(struct:translate 40.0 0.0 #18#))))) #(struct:translate 0 69.28203"
 #"23027551 #(struct:overlay #(struct:translate 0 0 #19#) #(struct:tran"
 #"slate 80.0 0.0 #19#))))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 400 0) #(struct:point 400 400) #(struc"
 #"t:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 100.0 50.7179676972449 #(struct:overlay #(struct:translate 40"
 #".0 0 #15=#(struct:overlay #(struct:translate 20.0 0 #14=#(struct:ove"
 #"rlay #(struct:translate 10.0 0 #13=#(struct:overlay #(struct:transla"
 #"te 5.0 0 #12=#(struct:translate -0.0 8.660254037844387 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 10"
 #" 0 0 0) #(struct:pulled-point 0 0 5.000000000000002 -8.6602540378443"
 #"87 0 0)) outline \"red\"))) #(struct:translate 0 8.660254037844387 #"
 #"(struct:overlay #(struct:translate 0 0 #12#) #(struct:translate 10.0"
 #" 0.0 #12#))))) #(struct:translate 0 17.320508075688775 #(struct:over"
 #"lay #(struct:translate 0 0 #13#) #(struct:translate 20.0 0.0 #13#)))"
 #")) #(struct:translate 0 34.64101615137755 #(struct:overlay #(struct:"
 #"translate 0 0 #14#) #(struct:translate 40.0 0.0 #14#))))) #(struct:t"
 #"ranslate 0 69.2820323027551 #(struct:overlay #(struct:translate 0 0 "
 #"#15#) #(struct:translate 80.0 0.0 #15#))))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:poi"
 #"nt 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 120.0 70.7179676972449 #(struct:overlay #("
 #"struct:translate 40.0 0 #11=#(struct:overlay #(struct:translate 20.0"
 #" 0 #10=#(struct:overlay #(struct:translate 10.0 0 #9=#(struct:overla"
 #"y #(struct:translate 5.0 0 #8=#(struct:translate -0.0 8.660254037844"
 #"387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.000000000000002"
 #" -8.660254037844387 0 0)) outline \"blue\"))) #(struct:translate 0 8"
 #".660254037844387 #(struct:overlay #(struct:translate 0 0 #8#) #(stru"
 #"ct:translate 10.0 0.0 #8#))))) #(struct:translate 0 17.3205080756887"
 #"75 #(struct:overlay #(struct:translate 0 0 #9#) #(struct:translate 2"
 #"0.0 0.0 #9#))))) #(struct:translate 0 34.64101615137755 #(struct:ove"
 #"rlay #(struct:translate 0 0 #10#) #(struct:translate 40.0 0.0 #10#))"
 #"))) #(struct:translate 0 69.2820323027551 #(struct:overlay #(struct:"
 #"translate 0 0 #11#) #(struct:translate 80.0 0.0 #11#))))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0"
 #") #(struct:point 400 400) #(struct:point 0 400)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 140.0 90.7179676972449 #(str"
 #"uct:overlay #(struct:translate 40.0 0 #7=#(struct:overlay #(struct:t"
 #"ranslate 20.0 0 #6=#(struct:overlay #(struct:translate 10.0 0 #5=#(s"
 #"truct:overlay #(struct:translate 5.0 0 #4=#(struct:translate -0.0 8."
 #"660254037844387 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point 0 0 5.000"
 #"000000000002 -8.660254037844387 0 0)) outline \"green\"))) #(struct:"
 #"translate 0 8.660254037844387 #(struct:overlay #(struct:translate 0 "
 #"0 #4#) #(struct:translate 10.0 0.0 #4#))))) #(struct:translate 0 17."
 #"320508075688775 #(struct:overlay #(struct:translate 0 0 #5#) #(struc"
 #"t:translate 20.0 0.0 #5#))))) #(struct:translate 0 34.64101615137755"
 #" #(struct:overlay #(struct:translate 0 0 #6#) #(struct:translate 40."
 #"0 0.0 #6#))))) #(struct:translate 0 69.2820323027551 #(struct:overla"
 #"y #(struct:translate 0 0 #7#) #(struct:translate 80.0 0.0 #7#))))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 160.0 110.717967697"
 #"2449 #(struct:overlay #(struct:translate 40.0 0 #3=#(struct:overlay "
 #"#(struct:translate 20.0 0 #2=#(struct:overlay #(struct:translate 10."
 #"0 0 #1=#(struct:overlay #(struct:translate 5.0 0 #0=#(struct:transla"
 #"te -0.0 8.660254037844387 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point"
 #" 0 0 5.000000000000002 -8.660254037844387 0 0)) outline \"yellow\"))"
 #") #(struct:translate 0 8.660254037844387 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #0#) #(struct:translate 10.0 0.0 #0#))))) #(struct:tran"
 #"slate 0 17.320508075688775 #(struct:overlay #(struct:translate 0 0 #"
 #"1#) #(struct:translate 20.0 0.0 #1#))))) #(struct:translate 0 34.641"
 #"01615137755 #(struct:overlay #(struct:translate 0 0 #2#) #(struct:tr"
 #"anslate 40.0 0.0 #2#))))) #(struct:translate 0 69.2820323027551 #(st"
 #"ruct:overlay #(struct:translate 0 0 #3#) #(struct:translate 80.0 0.0"
 #" #3#))))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 400 0) #(struct:point 400 400) #(struct:point 0 400))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 400 0 0 0) #(struct:pulled-point 0 0 4"
 #"00 400 0 0) #(struct:pulled-point 0 0 0 400 0 0)) outline #(struct:p"
 #"en \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 400 0 0 0) #(struct:pulled-point 0 0 400 4"
 #"00 0 0) #(struct:pulled-point 0 0 0 400 0 0)) 255 \"white\")))))))))"
 #"))))))))))))))))))))))))))))) #(struct:bb 400 400 400.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Chamada 4"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 19 #"desenha-figuras-gen"
0 0 24 3 1 #" "
0 0 14 3 14 #"desenha-boneco"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-figura"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 7 #"grande?"
0 0 24 3 1 #" "
0 0 14 3 11 #"aumenta-alt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 6           4 17 16343
(67
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:p"
 #"oint 400 400) #(struct:point 0 400)) #(struct:translate 0 -9.9583333"
 #"33333336 #(struct:overlay #(struct:translate 80.45780408782419 0 #(s"
 #"truct:overlay #(struct:translate 7.04219591217581 0 #(struct:transla"
 #"te 25/2 25/2 #(struct:ellipse 25 25 0 255 \"blue\"))) #(struct:trans"
 #"late 0 25 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 9.944365166353107 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 7.216878364870323 0.0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 -7.216878364870323 -0.0 0 0) #(struct:pul"
 #"led-point 0 0 -7.216878364870323 8.333333333333334 0 0) #(struct:pul"
 #"led-point 0 0 0.0 4.166666666666669 0 0)) 255 \"cyan\"))) #(struct:t"
 #"ranslate 7.216878364870323 0.0 #(struct:overlay #(struct:translate 0"
 #" 1.785714285714286 #(struct:translate 50/21 50/21 #(struct:ellipse 1"
 #"00/21 100/21 0 255 \"cyan\"))) #(struct:translate 100/21 0 #(struct:"
 #"translate -0.0 8.333333333333334 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 7.216878364870323 0.0 0 0) #(struct:pulled-point 0 0 7.2168"
 #"78364870323 -8.333333333333334 0 0) #(struct:pulled-point 0 0 0.0 -4"
 #".166666666666669 0 0)) 255 \"cyan\"))))))) #(struct:translate 0 8.33"
 #"3333333333334 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 1.041666666666675 #(struct:translate 18.0421"
 #"9591217582 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(stru"
 #"ct:point -18.04219591217582 31.249999999999986) \"blue\"))) #(struct"
 #":translate 19.04219591217582 0 #(struct:translate 0 0 #(struct:line-"
 #"segment #(struct:point 0 0) #(struct:point 0 100/3) \"blue\"))))) #("
 #"struct:translate 20.04219591217582 1.0416666666666679 #(struct:trans"
 #"late 0.0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struc"
 #"t:point 18.0421959121758 31.25) \"blue\"))))))) #(struct:translate 0"
 #".5 42.66666666666667 #(struct:overlay #(struct:translate 0 7.1054273"
 #"57601002e-015 #(struct:translate 18.04219591217582 0.0 #(struct:line"
 #"-segment #(struct:point 0.0 -0.0) #(struct:point -18.04219591217582 "
 #"31.249999999999986) \"blue\"))) #(struct:translate 19.04219591217582"
 #" 0 #(struct:translate 0.0 0.0 #(struct:line-segment #(struct:point -"
 #"0.0 -0.0) #(struct:point 18.0421959121758 31.25) \"blue\"))))))))) #"
 #"(struct:translate 0 9.958333333333336 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 400 0) #(struct:point 400 400) #(struct:point 0 "
 #"400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 112"
 #".84936490538902 4.25 #(struct:overlay #(struct:translate 8.150635094"
 #"61097 0 #(struct:translate 15 15 #(struct:ellipse 30 30 0 255 \"gree"
 #"n\"))) #(struct:translate 0 30 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 11.633238199623726 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 8.660254037844387"
 #" 0.0 #(struct:polygon (#(struct:pulled-point 0 0 -8.660254037844387 "
 #"-0.0 0 0) #(struct:pulled-point 0 0 -8.660254037844387 10.0 0 0) #(s"
 #"truct:pulled-point 0 0 0.0 5.000000000000002 0 0)) 255 \"red\"))) #("
 #"struct:translate 8.660254037844387 0.0 #(struct:overlay #(struct:tra"
 #"nslate 0 2.142857142857143 #(struct:translate 20/7 20/7 #(struct:ell"
 #"ipse 40/7 40/7 0 255 \"red\"))) #(struct:translate 40/7 0 #(struct:t"
 #"ranslate -0.0 10.0 #(struct:polygon (#(struct:pulled-point 0 0 8.660"
 #"254037844387 0.0 0 0) #(struct:pulled-point 0 0 8.660254037844387 -1"
 #"0.0 0 0) #(struct:pulled-point 0 0 0.0 -5.000000000000002 0 0)) 255 "
 #"\"red\"))))))) #(struct:translate 0 10.0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 1.250000000000010"
 #"7 #(struct:translate 21.65063509461098 0.0 #(struct:line-segment #(s"
 #"truct:point 0.0 -0.0) #(struct:point -21.65063509461098 37.499999999"
 #"99998) \"green\"))) #(struct:translate 22.65063509461098 0 #(struct:"
 #"translate 0 0 #(struct:line-segment #(struct:point 0 0) #(struct:poi"
 #"nt 0 40) \"green\"))))) #(struct:translate 23.65063509461098 1.25000"
 #"00000000036 #(struct:translate 0.0 0.0 #(struct:line-segment #(struc"
 #"t:point -0.0 -0.0) #(struct:point 21.65063509461096 37.4999999999999"
 #"9) \"green\"))))))) #(struct:translate 0.5 51.0 #(struct:overlay #(s"
 #"truct:translate 0 7.105427357601002e-015 #(struct:translate 21.65063"
 #"509461098 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struc"
 #"t:point -21.65063509461098 37.49999999999998) \"green\"))) #(struct:"
 #"translate 22.65063509461098 0 #(struct:translate 0.0 0.0 #(struct:li"
 #"ne-segment #(struct:point -0.0 -0.0) #(struct:point 21.6506350946109"
 #"6 37.49999999999999) \"green\"))))))))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 4"
 #"00 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 170.51923788646684 51.5 #(struct:overlay #(str"
 #"uct:translate 9.480762113533167 0 #(struct:translate 18 18 #(struct:"
 #"ellipse 36 36 0 255 \"yellow\"))) #(struct:translate 0 36 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 13"
 #".659885839548474 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"translate 10.392304845413264 0.0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 -10.392304845413264 -0.0 0 0) #(struct:pulled-point 0 0 -10"
 #".392304845413264 12.0 0 0) #(struct:pulled-point 0 0 0.0 6.000000000"
 #"000003 0 0)) 255 \"blue\"))) #(struct:translate 10.392304845413264 0"
 #".0 #(struct:overlay #(struct:translate 0 2.5714285714285716 #(struct"
 #":translate 24/7 24/7 #(struct:ellipse 48/7 48/7 0 255 \"blue\"))) #("
 #"struct:translate 48/7 0 #(struct:translate -0.0 12.0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 10.392304845413264 0.0 0 0) #(struct:pu"
 #"lled-point 0 0 10.392304845413264 -12.0 0 0) #(struct:pulled-point 0"
 #" 0 0.0 -6.000000000000003 0 0)) 255 \"blue\"))))))) #(struct:transla"
 #"te 0 12.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 1.5000000000000107 #(struct:translate 25.9807621"
 #"13533178 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct"
 #":point -25.980762113533178 44.99999999999998) \"yellow\"))) #(struct"
 #":translate 26.980762113533178 0 #(struct:translate 0 0 #(struct:line"
 #"-segment #(struct:point 0 0) #(struct:point 0 48) \"yellow\"))))) #("
 #"struct:translate 27.980762113533178 1.5 #(struct:translate 0.0 0.0 #"
 #"(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point 25.980"
 #"762113533153 45.0) \"yellow\"))))))) #(struct:translate 0.5 61.0 #(s"
 #"truct:overlay #(struct:translate 0 1.0658141036401503e-014 #(struct:"
 #"translate 25.980762113533178 0.0 #(struct:line-segment #(struct:poin"
 #"t 0.0 -0.0) #(struct:point -25.980762113533178 44.99999999999998) \""
 #"yellow\"))) #(struct:translate 26.980762113533178 0 #(struct:transla"
 #"te 0.0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:"
 #"point 25.980762113533153 45.0) \"yellow\"))))))))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 400 0) #(str"
 #"uct:point 400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 228.28700107193583 130.302083333333"
 #"34 #(struct:overlay #(struct:translate 11.087998928064152 0 #(struct"
 #":translate 173/8 173/8 #(struct:ellipse 173/4 173/4 0 255 \"cyan\"))"
 #") #(struct:translate 0 173/4 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 16.108751737790875 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:translate 12.485199571225657 "
 #"0.0 #(struct:polygon (#(struct:pulled-point 0 0 -12.485199571225657 "
 #"-0.0 0 0) #(struct:pulled-point 0 0 -12.485199571225657 14.416666666"
 #"666666 0 0) #(struct:pulled-point 0 0 0.0 7.208333333333337 0 0)) 25"
 #"5 \"green\"))) #(struct:translate 12.485199571225657 0.0 #(struct:ov"
 #"erlay #(struct:translate 0 3.0892857142857144 #(struct:translate 173"
 #"/42 173/42 #(struct:ellipse 173/21 173/21 0 255 \"green\"))) #(struc"
 #"t:translate 173/21 0 #(struct:translate -0.0 14.416666666666666 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 12.485199571225657 0.0 0 0) "
 #"#(struct:pulled-point 0 0 12.485199571225657 -14.416666666666666 0 0"
 #") #(struct:pulled-point 0 0 0.0 -7.208333333333337 0 0)) 255 \"green"
 #"\"))))))) #(struct:translate 0 14.416666666666666 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 1.802083"
 #"3333333428 #(struct:translate 31.21299892806417 0.0 #(struct:line-se"
 #"gment #(struct:point 0.0 -0.0) #(struct:point -31.21299892806417 54."
 #"06249999999998) \"cyan\"))) #(struct:translate 32.21299892806417 0 #"
 #"(struct:translate 0 0 #(struct:line-segment #(struct:point 0 0) #(st"
 #"ruct:point 0 173/3) \"cyan\"))))) #(struct:translate 33.212998928064"
 #"17 1.8020833333333321 #(struct:translate 0.0 0.0 #(struct:line-segme"
 #"nt #(struct:point -0.0 -0.0) #(struct:point 31.21299892806414 54.062"
 #"5) \"cyan\"))))))) #(struct:translate 0.5 73.08333333333333 #(struct"
 #":overlay #(struct:translate 0 1.0658141036401503e-014 #(struct:trans"
 #"late 31.21299892806417 0.0 #(struct:line-segment #(struct:point 0.0 "
 #"-0.0) #(struct:point -31.21299892806417 54.06249999999998) \"cyan\")"
 #")) #(struct:translate 32.21299892806417 0 #(struct:translate 0.0 0.0"
 #" #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point 31.2"
 #"1299892806414 54.0625) \"cyan\"))))))))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point "
 #"400 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 253.97223250267433 163.16666666666669 #(struc"
 #"t:overlay #(struct:translate 13.027767497325684 0 #(struct:translate"
 #" 26 26 #(struct:ellipse 52 52 0 255 \"red\"))) #(struct:translate 0 "
 #"52 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 19.06427954601446 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 15.01110699893027 0.0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 -15.01110699893027 -0.0 0 0) #(struct:pulled-poi"
 #"nt 0 0 -15.01110699893027 17.333333333333332 0 0) #(struct:pulled-po"
 #"int 0 0 0.0 8.66666666666667 0 0)) 255 \"yellow\"))) #(struct:transl"
 #"ate 15.01110699893027 0.0 #(struct:overlay #(struct:translate 0 3.71"
 #"42857142857135 #(struct:translate 104/21 104/21 #(struct:ellipse 208"
 #"/21 208/21 0 255 \"yellow\"))) #(struct:translate 208/21 0 #(struct:"
 #"translate -0.0 17.333333333333332 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 15.01110699893027 0.0 0 0) #(struct:pulled-point 0 0 15.01"
 #"110699893027 -17.333333333333332 0 0) #(struct:pulled-point 0 0 0.0 "
 #"-8.66666666666667 0 0)) 255 \"yellow\"))))))) #(struct:translate 0 1"
 #"7.333333333333332 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 2.1666666666666785 #(struct:translate 37"
 #".527767497325705 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) "
 #"#(struct:point -37.527767497325705 64.99999999999997) \"red\"))) #(s"
 #"truct:translate 38.527767497325705 0 #(struct:translate 0 0 #(struct"
 #":line-segment #(struct:point 0 0) #(struct:point 0 208/3) \"red\")))"
 #")) #(struct:translate 39.527767497325705 2.1666666666666643 #(struct"
 #":translate 0.0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #"
 #"(struct:point 37.52776749732566 65.0) \"red\"))))))) #(struct:transl"
 #"ate 0.5 87.66666666666666 #(struct:overlay #(struct:translate 0 1.42"
 #"10854715202004e-014 #(struct:translate 37.527767497325705 0.0 #(stru"
 #"ct:line-segment #(struct:point 0.0 -0.0) #(struct:point -37.52776749"
 #"7325705 64.99999999999997) \"red\"))) #(struct:translate 38.52776749"
 #"7325705 0 #(struct:translate 0.0 0.0 #(struct:line-segment #(struct:"
 #"point -0.0 -0.0) #(struct:point 37.52776749732566 65.0) \"red\")))))"
 #")))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(str"
 #"uct:point 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 326.394510219"
 #"56046 153.60416666666669 #(struct:overlay #(struct:translate 15.3554"
 #"89780439527 0 #(struct:translate 125/4 125/4 #(struct:ellipse 125/2 "
 #"125/2 0 255 \"blue\"))) #(struct:translate 0 125/2 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 22.610912"
 #"915882768 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 18.042195912175806 0.0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 -18.042195912175806 -0.0 0 0) #(struct:pulled-point 0 0 -18.042195"
 #"912175806 20.833333333333332 0 0) #(struct:pulled-point 0 0 0.0 10.4"
 #"16666666666671 0 0)) 255 \"cyan\"))) #(struct:translate 18.042195912"
 #"175806 0.0 #(struct:overlay #(struct:translate 0 4.4642857142857135 "
 #"#(struct:translate 125/21 125/21 #(struct:ellipse 250/21 250/21 0 25"
 #"5 \"cyan\"))) #(struct:translate 250/21 0 #(struct:translate -0.0 20"
 #".833333333333332 #(struct:polygon (#(struct:pulled-point 0 0 18.0421"
 #"95912175806 0.0 0 0) #(struct:pulled-point 0 0 18.042195912175806 -2"
 #"0.833333333333332 0 0) #(struct:pulled-point 0 0 0.0 -10.41666666666"
 #"6671 0 0)) 255 \"cyan\"))))))) #(struct:translate 0 20.8333333333333"
 #"32 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 2.6041666666666785 #(struct:translate 45.10548978043955"
 #"5 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct:point "
 #"-45.105489780439555 78.12499999999997) \"blue\"))) #(struct:translat"
 #"e 46.105489780439555 0 #(struct:translate 0 0 #(struct:line-segment "
 #"#(struct:point 0 0) #(struct:point 0 250/3) \"blue\"))))) #(struct:t"
 #"ranslate 47.105489780439555 2.6041666666666643 #(struct:translate 0."
 #"0 0.0 #(struct:line-segment #(struct:point -0.0 -0.0) #(struct:point"
 #" 45.105489780439505 78.125) \"blue\"))))))) #(struct:translate 0.5 1"
 #"05.16666666666666 #(struct:overlay #(struct:translate 0 1.4210854715"
 #"202004e-014 #(struct:translate 45.105489780439555 0.0 #(struct:line-"
 #"segment #(struct:point 0.0 -0.0) #(struct:point -45.105489780439555 "
 #"78.12499999999997) \"blue\"))) #(struct:translate 46.105489780439555"
 #" 0 #(struct:translate 0.0 0.0 #(struct:line-segment #(struct:point -"
 #"0.0 -0.0) #(struct:point 45.105489780439505 78.125) \"blue\"))))))))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 400 0) #(struct:point 400 400) #(struct:point 0 400)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 389.373412263472"
 #"6 145.125 #(struct:overlay #(struct:translate 18.12658773652744 0 #("
 #"struct:translate 75/2 75/2 #(struct:ellipse 75 75 0 255 \"green\")))"
 #" #(struct:translate 0 75 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 26.83309549905933 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 21.65063509461097 0.0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 -21.65063509461097 -0.0 0 "
 #"0) #(struct:pulled-point 0 0 -21.65063509461097 25.0 0 0) #(struct:p"
 #"ulled-point 0 0 0.0 12.500000000000005 0 0)) 255 \"red\"))) #(struct"
 #":translate 21.65063509461097 0.0 #(struct:overlay #(struct:translate"
 #" 0 5.357142857142857 #(struct:translate 50/7 50/7 #(struct:ellipse 1"
 #"00/7 100/7 0 255 \"red\"))) #(struct:translate 100/7 0 #(struct:tran"
 #"slate -0.0 25.0 #(struct:polygon (#(struct:pulled-point 0 0 21.65063"
 #"509461097 0.0 0 0) #(struct:pulled-point 0 0 21.65063509461097 -25.0"
 #" 0 0) #(struct:pulled-point 0 0 0.0 -12.500000000000005 0 0)) 255 \""
 #"red\"))))))) #(struct:translate 0 25.0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 3.125000000000014 #"
 #"(struct:translate 54.12658773652747 0.0 #(struct:line-segment #(stru"
 #"ct:point 0.0 -0.0) #(struct:point -54.12658773652747 93.749999999999"
 #"97) \"green\"))) #(struct:translate 55.12658773652747 0 #(struct:tra"
 #"nslate 0 0 #(struct:line-segment #(struct:point 0 0) #(struct:point "
 #"0 100) \"green\"))))) #(struct:translate 56.12658773652747 3.1249999"
 #"99999993 #(struct:translate 0.0 0.0 #(struct:line-segment #(struct:p"
 #"oint -0.0 -0.0) #(struct:point 54.12658773652741 93.75000000000001) "
 #"\"green\"))))))) #(struct:translate 0.5 126.0 #(struct:overlay #(str"
 #"uct:translate 0 2.1316282072803006e-014 #(struct:translate 54.126587"
 #"73652747 0.0 #(struct:line-segment #(struct:point 0.0 -0.0) #(struct"
 #":point -54.12658773652747 93.74999999999997) \"green\"))) #(struct:t"
 #"ranslate 55.12658773652747 0 #(struct:translate 0.0 0.0 #(struct:lin"
 #"e-segment #(struct:point -0.0 -0.0) #(struct:point 54.12658773652741"
 #" 93.75000000000001) \"green\"))))))))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 400 0) #(struct:point 40"
 #"0 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0"
 #") #(struct:pulled-point 0 0 400 400 0 0) #(struct:pulled-point 0 0 0"
 #" 400 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 400 0 0 0) #("
 #"struct:pulled-point 0 0 400 400 0 0) #(struct:pulled-point 0 0 0 400"
 #" 0 0)) 255 \"white\")))))))))))))))))))))))))))))))))) #(struct:bb 4"
 #"00 400 400.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
(68
 #";; (c) Argumenta\303\247\303\243o da "
 #"termina\303\247\303\243o das chamadas de exemplo:"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Chamada 1: "
0 0 17 3 1 #"("
0 0 17 3 19 #"desenha-figuras-gen"
0 0 17 3 1 #" "
0 0 17 3 18 #"desenha-sierpinski"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-figura"
0 0 17 3 36 #" 100 40 100 1) pequena? diminui-alt)"
0 0 24 29 1 #"\n"
0 0 17 3 124
(69
 #";; A cada chamada recursiva, a "
 #"figura ter\303\241 sua altura diminu\303\255da, cada vez mais se apr"
 #"oximando do caso trivial do crit\303\251rio"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";; (que \303\251 pequena demais)."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Chamada 2: "
0 0 17 3 1 #"("
0 0 17 3 19 #"desenha-figuras-gen"
0 0 17 3 1 #" "
0 0 17 3 12 #"desenha-bola"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-figura"
0 0 17 3 47 #" 100 40 100 1) out-of-borders? move-dir-random)"
0 0 24 29 1 #"\n"
0 0 17 3 127
(70
 #";; A cada chamada recursiva, "
 #"a figura ser\303\241 movida alea"
 #"t\303\263riamente pela cena, at\303\251"
 #" que em algum momento cair\303\241 no caso trivial,"
) 0 0 24 29 1 #"\n"
0 0 17 3 37 #";; onde ultrapassa as bordas da cena."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Chamada 3: "
0 0 17 3 1 #"("
0 0 17 3 19 #"desenha-figuras-gen"
0 0 17 3 1 #" "
0 0 17 3 18 #"desenha-sierpinski"
0 0 17 3 2 #" ("
0 0 17 3 42 #"make-figura 100 40 100 1) cor>7? move-dir)"
0 0 24 29 1 #"\n"
0 0 17 3 133
(71
 #";; A cada chamada recursiva"
 #", a figura ter\303\241 sua posi\303\247\303\243o e cor alteradas. Em"
 #" algum momento a cor ter\303\241 "
 #"valor >7, e assim, a fun\303\247\303\243o"
) 0 0 24 29 1 #"\n"
0 0 17 3 55
(72
 #";; cair\303\241 no caso trivial, isto \303\251, no crit\303\251rio c"
 #"or>7."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Chamada 4: "
0 0 17 3 1 #"("
0 0 17 3 19 #"desenha-figuras-gen"
0 0 17 3 1 #" "
0 0 17 3 14 #"desenha-boneco"
0 0 17 3 2 #" ("
0 0 17 3 11 #"make-figura"
0 0 17 3 35 #" 100 40 100 1) grande? aumenta-alt)"
0 0 24 29 1 #"\n"
0 0 17 3 126
(73
 #";; ;; A cada chamada recursiva, a figura ter\303\241 sua altura aume"
 #"ntada, cada vez mais se aproximando do caso trivial do crit\303\251r"
 #"io"
) 0 0 24 29 1 #"\n"
0 0 17 3 26 #";; (que \303\251 grande demais)."
0 0 24 29 1 #"\n"
0           0
